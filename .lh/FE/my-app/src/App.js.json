{
    "sourceFile": "FE/my-app/src/App.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 26,
            "patches": [
                {
                    "date": 1654681241817,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1654681285657,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,17 +13,19 @@\n function App() {\n   const initialState = { user: null, products: [] };\n   const [state, dispatch] = useReducer(AppReducer, initialState);\n   const checkCurrentUser = useCallback(async()=>{\n-    try{\n-      const token = localStorage.getItem(\"token\");\n+  try {\n+    const token = localStorage.getItem(\"token\");\n       const options = {\n         method:\"GET\",\n         url:\"/api/v1/auth\",\n         headers:{\n           Authorization:`Bearer ${token}`\n         }\n-      }\n+  } catch (error) {\n+    console.log(error);\n+  }\n     }\n   })\n   return (\n     <AppContext.Provider value={{ state, dispatch }}>\n"
                },
                {
                    "date": 1654681305656,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,9 +20,9 @@\n         method:\"GET\",\n         url:\"/api/v1/auth\",\n         headers:{\n           Authorization:`Bearer ${token}`\n-        }\n+        }}\n   } catch (error) {\n     console.log(error);\n   }\n     }\n"
                },
                {
                    "date": 1654681317107,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,22 +12,22 @@\n \n function App() {\n   const initialState = { user: null, products: [] };\n   const [state, dispatch] = useReducer(AppReducer, initialState);\n-  const checkCurrentUser = useCallback(async()=>{\n-  try {\n-    const token = localStorage.getItem(\"token\");\n+  const checkCurrentUser = useCallback(async () => {\n+    try {\n+      const token = localStorage.getItem(\"token\");\n       const options = {\n-        method:\"GET\",\n-        url:\"/api/v1/auth\",\n-        headers:{\n-          Authorization:`Bearer ${token}`\n-        }}\n-  } catch (error) {\n-    console.log(error);\n-  }\n+        method: \"GET\",\n+        url: \"/api/v1/auth\",\n+        headers: {\n+          Authorization: `Bearer ${token}`,\n+        },\n+      };\n+    } catch (error) {\n+      console.log(error);\n     }\n-  })\n+  });\n   return (\n     <AppContext.Provider value={{ state, dispatch }}>\n       <Router>\n         <Fragment>\n"
                },
                {
                    "date": 1654681325596,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,5 @@\n-import { Fragment, useReducer } from \"react\";\n+import { Fragment, useCallback, useReducer } from \"react\";\n import \"./App.css\";\n import \"./index.scss\";\n import { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\n import AppReducer from \"./Reducer/AppReducer\";\n"
                },
                {
                    "date": 1654741577877,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,8 +8,9 @@\n import Home from \"./components/Home/Home\";\n import SignInPage from \"./pages/SignInPage\";\n import SignUpPage from \"./pages/SignUpPage\";\n import Error from \"./pages/Error\";\n+import { axios } from \"axios\";\n \n function App() {\n   const initialState = { user: null, products: [] };\n   const [state, dispatch] = useReducer(AppReducer, initialState);\n@@ -22,12 +23,17 @@\n         headers: {\n           Authorization: `Bearer ${token}`,\n         },\n       };\n+      const response = await axios(options);\n+      if (response.data.data.user) {\n+        const { userName } = response.data.data.user;\n+        dispatch({ type: \"CURRENT_USER\", payload: { userName } });\n+      }\n     } catch (error) {\n       console.log(error);\n     }\n-  });\n+  }, [dispatch]);\n   return (\n     <AppContext.Provider value={{ state, dispatch }}>\n       <Router>\n         <Fragment>\n"
                },
                {
                    "date": 1654741658079,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,5 @@\n-import { Fragment, useCallback, useReducer } from \"react\";\n+import { Fragment, useCallback, useEffect, useReducer } from \"react\";\n import \"./App.css\";\n import \"./index.scss\";\n import { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\n import AppReducer from \"./Reducer/AppReducer\";\n@@ -32,8 +32,11 @@\n     } catch (error) {\n       console.log(error);\n     }\n   }, [dispatch]);\n+  useEffect(() => {\n+    checkCurrentUser();\n+  }, [checkCurrentUser]);\n   return (\n     <AppContext.Provider value={{ state, dispatch }}>\n       <Router>\n         <Fragment>\n"
                },
                {
                    "date": 1654743509568,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,9 +18,9 @@\n     try {\n       const token = localStorage.getItem(\"token\");\n       const options = {\n         method: \"GET\",\n-        url: \"/api/v1/auth\",\n+        url: \"/api/v1/auth/\",\n         headers: {\n           Authorization: `Bearer ${token}`,\n         },\n       };\n"
                },
                {
                    "date": 1654743863846,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -28,8 +28,9 @@\n       if (response.data.data.user) {\n         const { userName } = response.data.data.user;\n         dispatch({ type: \"CURRENT_USER\", payload: { userName } });\n       }\n+      console.log(userName);\n     } catch (error) {\n       console.log(error);\n     }\n   }, [dispatch]);\n"
                },
                {
                    "date": 1654743897631,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -28,9 +28,8 @@\n       if (response.data.data.user) {\n         const { userName } = response.data.data.user;\n         dispatch({ type: \"CURRENT_USER\", payload: { userName } });\n       }\n-      console.log(userName);\n     } catch (error) {\n       console.log(error);\n     }\n   }, [dispatch]);\n"
                },
                {
                    "date": 1654744148094,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,8 +23,9 @@\n         headers: {\n           Authorization: `Bearer ${token}`,\n         },\n       };\n+      console.log(token);\n       const response = await axios(options);\n       if (response.data.data.user) {\n         const { userName } = response.data.data.user;\n         dispatch({ type: \"CURRENT_USER\", payload: { userName } });\n"
                },
                {
                    "date": 1654744200157,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,8 +29,9 @@\n       if (response.data.data.user) {\n         const { userName } = response.data.data.user;\n         dispatch({ type: \"CURRENT_USER\", payload: { userName } });\n       }\n+      console.log(response.data);\n     } catch (error) {\n       console.log(error);\n     }\n   }, [dispatch]);\n"
                },
                {
                    "date": 1654744837667,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,9 +29,9 @@\n       if (response.data.data.user) {\n         const { userName } = response.data.data.user;\n         dispatch({ type: \"CURRENT_USER\", payload: { userName } });\n       }\n-      console.log(response.data);\n+      console.log(response.data.user);\n     } catch (error) {\n       console.log(error);\n     }\n   }, [dispatch]);\n"
                },
                {
                    "date": 1654745172548,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,16 +1,16 @@\n import { Fragment, useCallback, useEffect, useReducer } from \"react\";\n import \"./App.css\";\n import \"./index.scss\";\n import { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\n+import axios from \"axios\";\n import AppReducer from \"./Reducer/AppReducer\";\n import AppContext from \"./components/AppContext/AppContext\";\n import Header from \"./components/Header/Header\";\n import Home from \"./components/Home/Home\";\n import SignInPage from \"./pages/SignInPage\";\n import SignUpPage from \"./pages/SignUpPage\";\n import Error from \"./pages/Error\";\n-import { axios } from \"axios\";\n \n function App() {\n   const initialState = { user: null, products: [] };\n   const [state, dispatch] = useReducer(AppReducer, initialState);\n"
                },
                {
                    "date": 1654745212970,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,9 +29,9 @@\n       if (response.data.data.user) {\n         const { userName } = response.data.data.user;\n         dispatch({ type: \"CURRENT_USER\", payload: { userName } });\n       }\n-      console.log(response.data.user);\n+      console.log(response.data.data.user);\n     } catch (error) {\n       console.log(error);\n     }\n   }, [dispatch]);\n"
                },
                {
                    "date": 1654757082703,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,9 +29,8 @@\n       if (response.data.data.user) {\n         const { userName } = response.data.data.user;\n         dispatch({ type: \"CURRENT_USER\", payload: { userName } });\n       }\n-      console.log(response.data.data.user);\n     } catch (error) {\n       console.log(error);\n     }\n   }, [dispatch]);\n"
                },
                {
                    "date": 1654767413005,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,57 @@\n+import { Fragment, useCallback, useEffect, useReducer } from \"react\";\n+import \"./App.css\";\n+import \"./index.scss\";\n+import { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\n+import axios from \"axios\";\n+import AppReducer from \"./Reducer/AppReducer\";\n+import AppContext from \"./components/AppContext/AppContext\";\n+import Header from \"./components/Header/Header\";\n+import Home from \"./components/Home/Home\";\n+import SignInPage from \"./pages/SignInPage\";\n+import SignUpPage from \"./pages/SignUpPage\";\n+import Error from \"./pages/Error\";\n+\n+function App() {\n+  const initialState = { user: null, products: [] };\n+  const [state, dispatch] = useReducer(AppReducer, initialState);\n+  const checkCurrentUser = useCallback(async () => {\n+    try {\n+      const token = localStorage.getItem(\"token\");\n+      const options = {\n+        method: \"GET\",\n+        url: \"/api/v1/auth/\",\n+        headers: {\n+          Authorization: `Bearer ${token}`,\n+        },\n+      };\n+      console.log(token);\n+      const response = await axios(options);\n+      if (response.data.data.user) {\n+        const { userName } = response.data.data.user;\n+        dispatch({ type: \"CURRENT_USER\", payload: { userName } });\n+      }\n+    } catch (error) {\n+      // console.log(error);\n+    }\n+  }, [dispatch]);\n+  useEffect(() => {\n+    checkCurrentUser();\n+  }, [checkCurrentUser]);\n+  return (\n+    <AppContext.Provider value={{ state, dispatch }}>\n+      <Router>\n+        <Fragment>\n+          <Header />\n+          <Routes>\n+            <Route path=\"/\" element={<Home />} />\n+            <Route path=\"/sign-in\" element={<SignInPage />} />\n+            <Route path=\"/sign-up\" element={<SignUpPage />} />\n+            <Route path=\"*\" element={<Error />} />\n+          </Routes>\n+        </Fragment>\n+      </Router>\n+    </AppContext.Provider>\n+  );\n+}\n+\n+export default App;\n"
                },
                {
                    "date": 1654767414798,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -54,61 +54,4 @@\n   );\n }\n \n export default App;\n-import { Fragment, useCallback, useEffect, useReducer } from \"react\";\n-import \"./App.css\";\n-import \"./index.scss\";\n-import { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\n-import axios from \"axios\";\n-import AppReducer from \"./Reducer/AppReducer\";\n-import AppContext from \"./components/AppContext/AppContext\";\n-import Header from \"./components/Header/Header\";\n-import Home from \"./components/Home/Home\";\n-import SignInPage from \"./pages/SignInPage\";\n-import SignUpPage from \"./pages/SignUpPage\";\n-import Error from \"./pages/Error\";\n-\n-function App() {\n-  const initialState = { user: null, products: [] };\n-  const [state, dispatch] = useReducer(AppReducer, initialState);\n-  const checkCurrentUser = useCallback(async () => {\n-    try {\n-      const token = localStorage.getItem(\"token\");\n-      const options = {\n-        method: \"GET\",\n-        url: \"/api/v1/auth/\",\n-        headers: {\n-          Authorization: `Bearer ${token}`,\n-        },\n-      };\n-      console.log(token);\n-      const response = await axios(options);\n-      if (response.data.data.user) {\n-        const { userName } = response.data.data.user;\n-        dispatch({ type: \"CURRENT_USER\", payload: { userName } });\n-      }\n-    } catch (error) {\n-      console.log(error);\n-    }\n-  }, [dispatch]);\n-  useEffect(() => {\n-    checkCurrentUser();\n-  }, [checkCurrentUser]);\n-  return (\n-    <AppContext.Provider value={{ state, dispatch }}>\n-      <Router>\n-        <Fragment>\n-          <Header />\n-          <Routes>\n-            <Route path=\"/\" element={<Home />} />\n-            <Route path=\"/sign-in\" element={<SignInPage />} />\n-            <Route path=\"/sign-up\" element={<SignUpPage />} />\n-            <Route path=\"*\" element={<Error />} />\n-          </Routes>\n-        </Fragment>\n-      </Router>\n-    </AppContext.Provider>\n-  );\n-}\n-\n-export default App;\n"
                },
                {
                    "date": 1654854099424,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,9 +11,9 @@\n import SignUpPage from \"./pages/SignUpPage\";\n import Error from \"./pages/Error\";\n \n function App() {\n-  const initialState = { user: null, products: [] };\n+  const initialState = { user: null, products: [], banners[] };\n   const [state, dispatch] = useReducer(AppReducer, initialState);\n   const checkCurrentUser = useCallback(async () => {\n     try {\n       const token = localStorage.getItem(\"token\");\n"
                },
                {
                    "date": 1654854609488,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,9 +11,9 @@\n import SignUpPage from \"./pages/SignUpPage\";\n import Error from \"./pages/Error\";\n \n function App() {\n-  const initialState = { user: null, products: [], banners[] };\n+  const initialState = { user: null, products: [], banners: [] };\n   const [state, dispatch] = useReducer(AppReducer, initialState);\n   const checkCurrentUser = useCallback(async () => {\n     try {\n       const token = localStorage.getItem(\"token\");\n@@ -23,9 +23,8 @@\n         headers: {\n           Authorization: `Bearer ${token}`,\n         },\n       };\n-      console.log(token);\n       const response = await axios(options);\n       if (response.data.data.user) {\n         const { userName } = response.data.data.user;\n         dispatch({ type: \"CURRENT_USER\", payload: { userName } });\n"
                },
                {
                    "date": 1654961870448,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,8 +9,9 @@\n import Home from \"./components/Home/Home\";\n import SignInPage from \"./pages/SignInPage\";\n import SignUpPage from \"./pages/SignUpPage\";\n import Error from \"./pages/Error\";\n+import ProductDetail from \"./components/Product/ProductDetail\";\n \n function App() {\n   const initialState = { user: null, products: [], banners: [] };\n   const [state, dispatch] = useReducer(AppReducer, initialState);\n@@ -44,8 +45,9 @@\n           <Routes>\n             <Route path=\"/\" element={<Home />} />\n             <Route path=\"/sign-in\" element={<SignInPage />} />\n             <Route path=\"/sign-up\" element={<SignUpPage />} />\n+            <Route path=\"/test\" element={<ProductDetail />} />\n             <Route path=\"*\" element={<Error />} />\n           </Routes>\n         </Fragment>\n       </Router>\n"
                },
                {
                    "date": 1655015278621,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,9 +12,9 @@\n import Error from \"./pages/Error\";\n import ProductDetail from \"./components/Product/ProductDetail\";\n \n function App() {\n-  const initialState = { user: null, products: [], banners: [] };\n+  const initialState = { user: null, products: [], banners: [], product: [] };\n   const [state, dispatch] = useReducer(AppReducer, initialState);\n   const checkCurrentUser = useCallback(async () => {\n     try {\n       const token = localStorage.getItem(\"token\");\n"
                },
                {
                    "date": 1655015785084,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -45,9 +45,9 @@\n           <Routes>\n             <Route path=\"/\" element={<Home />} />\n             <Route path=\"/sign-in\" element={<SignInPage />} />\n             <Route path=\"/sign-up\" element={<SignUpPage />} />\n-            <Route path=\"/test\" element={<ProductDetail />} />\n+            <Route path=\"/product/:id\" element={<ProductDetail />} />\n             <Route path=\"*\" element={<Error />} />\n           </Routes>\n         </Fragment>\n       </Router>\n"
                },
                {
                    "date": 1655017527499,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,9 +12,9 @@\n import Error from \"./pages/Error\";\n import ProductDetail from \"./components/Product/ProductDetail\";\n \n function App() {\n-  const initialState = { user: null, products: [], banners: [], product: [] };\n+  const initialState = { user: null, products: [], banners: [] };\n   const [state, dispatch] = useReducer(AppReducer, initialState);\n   const checkCurrentUser = useCallback(async () => {\n     try {\n       const token = localStorage.getItem(\"token\");\n"
                },
                {
                    "date": 1655020930031,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,9 +12,9 @@\n import Error from \"./pages/Error\";\n import ProductDetail from \"./components/Product/ProductDetail\";\n \n function App() {\n-  const initialState = { user: null, products: [], banners: [] };\n+  const initialState = { user: null, products: [], banners: [], product: [] };\n   const [state, dispatch] = useReducer(AppReducer, initialState);\n   const checkCurrentUser = useCallback(async () => {\n     try {\n       const token = localStorage.getItem(\"token\");\n"
                },
                {
                    "date": 1655043941846,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,47 +12,48 @@\n import Error from \"./pages/Error\";\n import ProductDetail from \"./components/Product/ProductDetail\";\n \n function App() {\n-  const initialState = { user: null, products: [], banners: [], product: [] };\n-  const [state, dispatch] = useReducer(AppReducer, initialState);\n-  const checkCurrentUser = useCallback(async () => {\n-    try {\n-      const token = localStorage.getItem(\"token\");\n-      const options = {\n-        method: \"GET\",\n-        url: \"/api/v1/auth/\",\n-        headers: {\n-          Authorization: `Bearer ${token}`,\n-        },\n-      };\n-      const response = await axios(options);\n-      if (response.data.data.user) {\n-        const { userName } = response.data.data.user;\n-        dispatch({ type: \"CURRENT_USER\", payload: { userName } });\n-      }\n-    } catch (error) {\n-      // console.log(error);\n-    }\n-  }, [dispatch]);\n-  useEffect(() => {\n-    checkCurrentUser();\n-  }, [checkCurrentUser]);\n+  // const initialState = { user: null, products: [], banners: [], product: [] };\n+  // const [state, dispatch] = useReducer(AppReducer, initialState);\n+  // const checkCurrentUser = useCallback(async () => {\n+  //   try {\n+  //     const token = localStorage.getItem(\"token\");\n+  //     const options = {\n+  //       method: \"GET\",\n+  //       url: \"/api/v1/auth/\",\n+  //       headers: {\n+  //         Authorization: `Bearer ${token}`,\n+  //       },\n+  //     };\n+  //     const response = await axios(options);\n+  //     if (response.data.data.user) {\n+  //       const { userName } = response.data.data.user;\n+  //       dispatch({ type: \"CURRENT_USER\", payload: { userName } });\n+  //     }\n+  //   } catch (error) {\n+  //     // console.log(error);\n+  //   }\n+  // }, [dispatch]);\n+  // useEffect(() => {\n+  //   checkCurrentUser();\n+  // }, [checkCurrentUser]);\n   return (\n-    <AppContext.Provider value={{ state, dispatch }}>\n-      <Router>\n-        <Fragment>\n-          <Header />\n-          <Routes>\n-            <Route path=\"/\" element={<Home />} />\n-            <Route path=\"/sign-in\" element={<SignInPage />} />\n-            <Route path=\"/sign-up\" element={<SignUpPage />} />\n-            <Route path=\"/product/:id\" element={<ProductDetail />} />\n-            <Route path=\"*\" element={<Error />} />\n-          </Routes>\n-        </Fragment>\n-      </Router>\n-    </AppContext.Provider>\n+    // <AppContext.Provider value={{ state, dispatch }}>\n+\n+    // </AppContext.Provider>\n+    <Router>\n+      <Fragment>\n+        <Header />\n+        <Routes>\n+          <Route path=\"/\" element={<Home />} />\n+          <Route path=\"/sign-in\" element={<SignInPage />} />\n+          <Route path=\"/sign-up\" element={<SignUpPage />} />\n+          <Route path=\"/product/:id\" element={<ProductDetail />} />\n+          <Route path=\"*\" element={<Error />} />\n+        </Routes>\n+      </Fragment>\n+    </Router>\n   );\n }\n \n export default App;\n"
                },
                {
                    "date": 1655044737226,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,9 +11,9 @@\n import SignUpPage from \"./pages/SignUpPage\";\n import Error from \"./pages/Error\";\n import ProductDetail from \"./components/Product/ProductDetail\";\n \n-function App =()=> {\n+const App =()=> {\n   // const initialState = { user: null, products: [], banners: [], product: [] };\n   // const [state, dispatch] = useReducer(AppReducer, initialState);\n   // const checkCurrentUser = useCallback(async () => {\n   //   try {\n"
                }
            ],
            "date": 1654681241817,
            "name": "Commit-0",
            "content": "import { Fragment, useReducer } from \"react\";\nimport \"./App.css\";\nimport \"./index.scss\";\nimport { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\nimport AppReducer from \"./Reducer/AppReducer\";\nimport AppContext from \"./components/AppContext/AppContext\";\nimport Header from \"./components/Header/Header\";\nimport Home from \"./components/Home/Home\";\nimport SignInPage from \"./pages/SignInPage\";\nimport SignUpPage from \"./pages/SignUpPage\";\nimport Error from \"./pages/Error\";\n\nfunction App() {\n  const initialState = { user: null, products: [] };\n  const [state, dispatch] = useReducer(AppReducer, initialState);\n  const checkCurrentUser = useCallback(async()=>{\n    try{\n      const token = localStorage.getItem(\"token\");\n      const options = {\n        method:\"GET\",\n        url:\"/api/v1/auth\",\n        headers:{\n          Authorization:`Bearer ${token}`\n        }\n      }\n    }\n  })\n  return (\n    <AppContext.Provider value={{ state, dispatch }}>\n      <Router>\n        <Fragment>\n          <Header />\n          <Routes>\n            <Route path=\"/\" element={<Home />} />\n            <Route path=\"/sign-in\" element={<SignInPage />} />\n            <Route path=\"/sign-up\" element={<SignUpPage />} />\n            <Route path=\"*\" element={<Error />} />\n          </Routes>\n        </Fragment>\n      </Router>\n    </AppContext.Provider>\n  );\n}\n\nexport default App;\n"
        }
    ]
}