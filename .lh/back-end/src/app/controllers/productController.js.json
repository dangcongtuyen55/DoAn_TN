{
    "sourceFile": "back-end/src/app/controllers/productController.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 132,
            "patches": [
                {
                    "date": 1651851802482,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1651851978525,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,5 @@\n-const productModel = require(\"../models/productModel\");\r\n+const productModel = require(\"../models/Product\");\r\n \r\n exports.getAllProducts = async (req, res, next) => {\r\n   try {\r\n     const { userId } = req.user;\r\n"
                },
                {
                    "date": 1651851992132,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,6 @@\n const productModel = require(\"../models/Product\");\r\n-\r\n+const { Schema } = mongoose;\r\n exports.getAllProducts = async (req, res, next) => {\r\n   try {\r\n     const { userId } = req.user;\r\n     const products = await productModel.find().populate(\"author\");\r\n"
                },
                {
                    "date": 1651852088528,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,6 @@\n const productModel = require(\"../models/Product\");\r\n-const { Schema } = mongoose;\r\n+\r\n exports.getAllProducts = async (req, res, next) => {\r\n   try {\r\n     const { userId } = req.user;\r\n     const products = await productModel.find().populate(\"author\");\r\n@@ -16,9 +16,9 @@\n };\r\n exports.createProduct = async (req, res, next) => {\r\n   try {\r\n     const { userId } = req.user;\r\n-    const products = await productModel.create({ ...req.body, author: userId });\r\n+    const products = await productModel.create({ ...req.body });\r\n     res.status(200).json({\r\n       status: \"success\",\r\n       results: products.length,\r\n       data: {\r\n"
                },
                {
                    "date": 1651856816780,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,8 +5,9 @@\n     const { userId } = req.user;\r\n     const products = await productModel.find().populate(\"author\");\r\n     res.status(200).json({\r\n       status: \"success\",\r\n+      results: products.length,\r\n       data: {\r\n         products,\r\n       },\r\n     });\r\n@@ -19,9 +20,9 @@\n     const { userId } = req.user;\r\n     const products = await productModel.create({ ...req.body });\r\n     res.status(200).json({\r\n       status: \"success\",\r\n-      results: products.length,\r\n+\r\n       data: {\r\n         products,\r\n       },\r\n     });\r\n"
                },
                {
                    "date": 1651857383431,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,9 +2,9 @@\n \r\n exports.getAllProducts = async (req, res, next) => {\r\n   try {\r\n     const { userId } = req.user;\r\n-    const products = await productModel.find().populate(\"author\");\r\n+    const products = await productModel.find().populate(\"createBy\");\r\n     res.status(200).json({\r\n       status: \"success\",\r\n       results: products.length,\r\n       data: {\r\n@@ -20,9 +20,8 @@\n     const { userId } = req.user;\r\n     const products = await productModel.create({ ...req.body });\r\n     res.status(200).json({\r\n       status: \"success\",\r\n-\r\n       data: {\r\n         products,\r\n       },\r\n     });\r\n"
                },
                {
                    "date": 1651857717607,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,8 @@\n const productModel = require(\"../models/Product\");\r\n \r\n exports.getAllProducts = async (req, res, next) => {\r\n   try {\r\n-    const { userId } = req.user;\r\n     const products = await productModel.find().populate(\"createBy\");\r\n     res.status(200).json({\r\n       status: \"success\",\r\n       results: products.length,\r\n"
                },
                {
                    "date": 1651857741519,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n-const productModel = require(\"../models/Product\");\r\n+const Product = require(\"../models/Product\");\r\n \r\n exports.getAllProducts = async (req, res, next) => {\r\n   try {\r\n-    const products = await productModel.find().populate(\"createBy\");\r\n+    const products = await Product.find().populate(\"createBy\");\r\n     res.status(200).json({\r\n       status: \"success\",\r\n       results: products.length,\r\n       data: {\r\n@@ -16,9 +16,9 @@\n };\r\n exports.createProduct = async (req, res, next) => {\r\n   try {\r\n     const { userId } = req.user;\r\n-    const products = await productModel.create({ ...req.body });\r\n+    const products = await Product.create({ ...req.body });\r\n     res.status(200).json({\r\n       status: \"success\",\r\n       data: {\r\n         products,\r\n@@ -31,9 +31,9 @@\n \r\n exports.updateProduct = async (req, res, next) => {\r\n   try {\r\n     const { productId } = req.params;\r\n-    const products = await productModel.findByIdAndUpdate(\r\n+    const products = await Product.findByIdAndUpdate(\r\n       productId,\r\n       { ...req.body },\r\n       { new: true },\r\n       { runValidator: true }\r\n@@ -50,9 +50,9 @@\n };\r\n exports.deleteProduct = async (req, res, next) => {\r\n   try {\r\n     const { productId } = req.params;\r\n-    await productModel.findByIdAndDelete(productId);\r\n+    await Product.findByIdAndDelete(productId);\r\n     res.status(200).json({\r\n       status: \"success\",\r\n       message: \"Product deleted successfully\",\r\n     });\r\n"
                },
                {
                    "date": 1651857818463,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n const Product = require(\"../models/Product\");\r\n \r\n exports.getAllProducts = async (req, res, next) => {\r\n   try {\r\n-    const products = await Product.find().populate(\"createBy\");\r\n+    const products = await Product.find().populate(\"author\");\r\n     res.status(200).json({\r\n       status: \"success\",\r\n       results: products.length,\r\n       data: {\r\n"
                },
                {
                    "date": 1651858008306,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,9 +16,12 @@\n };\r\n exports.createProduct = async (req, res, next) => {\r\n   try {\r\n     const { userId } = req.user;\r\n-    const products = await Product.create({ ...req.body });\r\n+    const products = await Product.create({\r\n+      ...req.body,\r\n+      slug: slugify(req.body.name),\r\n+    });\r\n     res.status(200).json({\r\n       status: \"success\",\r\n       data: {\r\n         products,\r\n"
                },
                {
                    "date": 1651858049058,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,8 +18,9 @@\n   try {\r\n     const { userId } = req.user;\r\n     const products = await Product.create({\r\n       ...req.body,\r\n+      author: userId,\r\n       slug: slugify(req.body.name),\r\n     });\r\n     res.status(200).json({\r\n       status: \"success\",\r\n"
                },
                {
                    "date": 1651858151052,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,6 @@\n const Product = require(\"../models/Product\");\r\n-\r\n+const slugify = require(\"slugify\");\r\n exports.getAllProducts = async (req, res, next) => {\r\n   try {\r\n     const products = await Product.find().populate(\"author\");\r\n     res.status(200).json({\r\n"
                },
                {
                    "date": 1651858212928,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n const Product = require(\"../models/Product\");\r\n const slugify = require(\"slugify\");\r\n exports.getAllProducts = async (req, res, next) => {\r\n   try {\r\n-    const products = await Product.find().populate(\"author\");\r\n+    const products = await Product.find().populate(\"createBy\");\r\n     res.status(200).json({\r\n       status: \"success\",\r\n       results: products.length,\r\n       data: {\r\n@@ -18,9 +18,9 @@\n   try {\r\n     const { userId } = req.user;\r\n     const products = await Product.create({\r\n       ...req.body,\r\n-      author: userId,\r\n+      createBy: userId,\r\n       slug: slugify(req.body.name),\r\n     });\r\n     res.status(200).json({\r\n       status: \"success\",\r\n"
                },
                {
                    "date": 1651858385691,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -34,12 +34,14 @@\n };\r\n \r\n exports.updateProduct = async (req, res, next) => {\r\n   try {\r\n+    const { userId } = req.user;\r\n     const { productId } = req.params;\r\n     const products = await Product.findByIdAndUpdate(\r\n       productId,\r\n-      { ...req.body },\r\n+\r\n+      { ...req.body, createBy: userId },\r\n       { new: true },\r\n       { runValidator: true }\r\n     );\r\n     res.status(200).json({\r\n"
                },
                {
                    "date": 1651858735775,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -38,9 +38,8 @@\n     const { userId } = req.user;\r\n     const { productId } = req.params;\r\n     const products = await Product.findByIdAndUpdate(\r\n       productId,\r\n-\r\n       { ...req.body, createBy: userId },\r\n       { new: true },\r\n       { runValidator: true }\r\n     );\r\n"
                },
                {
                    "date": 1651858745740,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -38,9 +38,9 @@\n     const { userId } = req.user;\r\n     const { productId } = req.params;\r\n     const products = await Product.findByIdAndUpdate(\r\n       productId,\r\n-      { ...req.body, createBy: userId },\r\n+      { ...req.body },\r\n       { new: true },\r\n       { runValidator: true }\r\n     );\r\n     res.status(200).json({\r\n"
                },
                {
                    "date": 1651858754140,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -38,9 +38,9 @@\n     const { userId } = req.user;\r\n     const { productId } = req.params;\r\n     const products = await Product.findByIdAndUpdate(\r\n       productId,\r\n-      { ...req.body },\r\n+      { ...req.body, createBy: userId },\r\n       { new: true },\r\n       { runValidator: true }\r\n     );\r\n     res.status(200).json({\r\n"
                },
                {
                    "date": 1651859039159,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -48,8 +48,9 @@\n       data: {\r\n         products,\r\n       },\r\n     });\r\n+    console.log(products);\r\n   } catch (error) {\r\n     res.json(error);\r\n   }\r\n };\r\n"
                },
                {
                    "date": 1651859055441,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -48,9 +48,9 @@\n       data: {\r\n         products,\r\n       },\r\n     });\r\n-    console.log(products);\r\n+    console.log(data);\r\n   } catch (error) {\r\n     res.json(error);\r\n   }\r\n };\r\n"
                },
                {
                    "date": 1651859074144,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -48,9 +48,9 @@\n       data: {\r\n         products,\r\n       },\r\n     });\r\n-    console.log(data);\r\n+    console.log(req.body);\r\n   } catch (error) {\r\n     res.json(error);\r\n   }\r\n };\r\n"
                },
                {
                    "date": 1651859094391,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -48,9 +48,8 @@\n       data: {\r\n         products,\r\n       },\r\n     });\r\n-    console.log(req.body);\r\n   } catch (error) {\r\n     res.json(error);\r\n   }\r\n };\r\n"
                },
                {
                    "date": 1651859238458,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -34,13 +34,13 @@\n };\r\n \r\n exports.updateProduct = async (req, res, next) => {\r\n   try {\r\n-    const { userId } = req.user;\r\n+    // const { userId } = req.user;\r\n     const { productId } = req.params;\r\n     const products = await Product.findByIdAndUpdate(\r\n       productId,\r\n-      { ...req.body, createBy: userId },\r\n+      { ...req.body },\r\n       { new: true },\r\n       { runValidator: true }\r\n     );\r\n     res.status(200).json({\r\n"
                },
                {
                    "date": 1651859264344,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -34,13 +34,14 @@\n };\r\n \r\n exports.updateProduct = async (req, res, next) => {\r\n   try {\r\n-    // const { userId } = req.user;\r\n+    const { userId } = req.user;\r\n     const { productId } = req.params;\r\n+    console.log(req.params);\r\n     const products = await Product.findByIdAndUpdate(\r\n       productId,\r\n-      { ...req.body },\r\n+      { ...req.body, createBy: userId },\r\n       { new: true },\r\n       { runValidator: true }\r\n     );\r\n     res.status(200).json({\r\n"
                },
                {
                    "date": 1651859304960,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -43,8 +43,9 @@\n       { ...req.body, createBy: userId },\r\n       { new: true },\r\n       { runValidator: true }\r\n     );\r\n+    console.log(products);\r\n     res.status(200).json({\r\n       status: \"success\",\r\n       data: {\r\n         products,\r\n"
                },
                {
                    "date": 1651859536462,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -39,11 +39,11 @@\n     const { productId } = req.params;\r\n     console.log(req.params);\r\n     const products = await Product.findByIdAndUpdate(\r\n       productId,\r\n-      { ...req.body, createBy: userId },\r\n-      { new: true },\r\n-      { runValidator: true }\r\n+      { ...req.body, createBy: userId }\r\n+      // { new: true },\r\n+      // { runValidator: true }\r\n     );\r\n     console.log(products);\r\n     res.status(200).json({\r\n       status: \"success\",\r\n"
                },
                {
                    "date": 1651859637926,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -39,11 +39,10 @@\n     const { productId } = req.params;\r\n     console.log(req.params);\r\n     const products = await Product.findByIdAndUpdate(\r\n       productId,\r\n-      { ...req.body, createBy: userId }\r\n-      // { new: true },\r\n-      // { runValidator: true }\r\n+      { ...req.body, createBy: userId },\r\n+      { new: true, runValidator: true }\r\n     );\r\n     console.log(products);\r\n     res.status(200).json({\r\n       status: \"success\",\r\n"
                },
                {
                    "date": 1651859680886,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -39,9 +39,9 @@\n     const { productId } = req.params;\r\n     console.log(req.params);\r\n     const products = await Product.findByIdAndUpdate(\r\n       productId,\r\n-      { ...req.body, createBy: userId },\r\n+      { ...req.body, createBy: userId, slug: slugify(req.body.name) },\r\n       { new: true, runValidator: true }\r\n     );\r\n     console.log(products);\r\n     res.status(200).json({\r\n"
                },
                {
                    "date": 1651859724848,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -39,9 +39,9 @@\n     const { productId } = req.params;\r\n     console.log(req.params);\r\n     const products = await Product.findByIdAndUpdate(\r\n       productId,\r\n-      { ...req.body, createBy: userId, slug: slugify(req.body.name) },\r\n+      { ...req.body, deleteBy: userId, slug: slugify(req.body.name) },\r\n       { new: true, runValidator: true }\r\n     );\r\n     console.log(products);\r\n     res.status(200).json({\r\n"
                },
                {
                    "date": 1651860090803,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -39,9 +39,9 @@\n     const { productId } = req.params;\r\n     console.log(req.params);\r\n     const products = await Product.findByIdAndUpdate(\r\n       productId,\r\n-      { ...req.body, deleteBy: userId, slug: slugify(req.body.name) },\r\n+      { ...req.body, updateBy: userId, slug: slugify(req.body.name) },\r\n       { new: true, runValidator: true }\r\n     );\r\n     console.log(products);\r\n     res.status(200).json({\r\n"
                },
                {
                    "date": 1651938653946,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,70 @@\n+const Product = require(\"../models/Product\");\r\n+const slugify = require(\"slugify\");\r\n+exports.getAllProducts = async (req, res, next) => {\r\n+  try {\r\n+    const products = await Product.find().populate(\"createBy\");\r\n+    res.status(200).json({\r\n+      status: \"success\",\r\n+      results: products.length,\r\n+      data: {\r\n+        products,\r\n+      },\r\n+    });\r\n+  } catch (error) {\r\n+    res.json(error);\r\n+  }\r\n+};\r\n+exports.createProduct = async (req, res, next) => {\r\n+  try {\r\n+    const { userId } = req.user;\r\n+    const products = await Product.create({\r\n+      ...req.body,\r\n+      createBy: userId,\r\n+      slug: slugify(req.body.name),\r\n+    });\r\n+    res.status(200).json({\r\n+      status: \"success\",\r\n+      data: {\r\n+        products,\r\n+      },\r\n+    });\r\n+  } catch (error) {\r\n+    res.json(error);\r\n+  }\r\n+};\r\n+\r\n+exports.updateProduct = async (req, res, next) => {\r\n+  try {\r\n+    const { userId } = req.user;\r\n+    const { productId } = req.params;\r\n+    console.log(req.params);\r\n+    const products = await Product.findByIdAndUpdate(\r\n+      productId,\r\n+      { ...req.body, updateBy: userId, slug: slugify(req.body.name) },\r\n+      { new: true, runValidator: true }\r\n+    );\r\n+    console.log(products);\r\n+    res.status(200).json({\r\n+      status: \"success\",\r\n+      data: {\r\n+        products,\r\n+      },\r\n+    });\r\n+  } catch (error) {\r\n+    res.json(error);\r\n+  }\r\n+};\r\n+exports.deleteProduct = async (req, res, next) => {\r\n+  try {\r\n+    const { userId } = req.user;\r\n+    const { productId } = req.params;\r\n+    await Product.findByIdAndDelete(productId);\r\n+    res.status(200).json({\r\n+      status: \"success\",\r\n+      message: \"Product deleted successfully\",\r\n+      deleteBy: userId,\r\n+    });\r\n+  } catch (error) {\r\n+    res.json(error);\r\n+  }\r\n+};\r\n"
                },
                {
                    "date": 1651938658221,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -67,72 +67,4 @@\n   } catch (error) {\r\n     res.json(error);\r\n   }\r\n };\r\n-const Product = require(\"../models/Product\");\r\n-const slugify = require(\"slugify\");\r\n-exports.getAllProducts = async (req, res, next) => {\r\n-  try {\r\n-    const products = await Product.find().populate(\"createBy\");\r\n-    res.status(200).json({\r\n-      status: \"success\",\r\n-      results: products.length,\r\n-      data: {\r\n-        products,\r\n-      },\r\n-    });\r\n-  } catch (error) {\r\n-    res.json(error);\r\n-  }\r\n-};\r\n-exports.createProduct = async (req, res, next) => {\r\n-  try {\r\n-    const { userId } = req.user;\r\n-    const products = await Product.create({\r\n-      ...req.body,\r\n-      createBy: userId,\r\n-      slug: slugify(req.body.name),\r\n-    });\r\n-    res.status(200).json({\r\n-      status: \"success\",\r\n-      data: {\r\n-        products,\r\n-      },\r\n-    });\r\n-  } catch (error) {\r\n-    res.json(error);\r\n-  }\r\n-};\r\n-\r\n-exports.updateProduct = async (req, res, next) => {\r\n-  try {\r\n-    const { userId } = req.user;\r\n-    const { productId } = req.params;\r\n-    console.log(req.params);\r\n-    const products = await Product.findByIdAndUpdate(\r\n-      productId,\r\n-      { ...req.body, updateBy: userId, slug: slugify(req.body.name) },\r\n-      { new: true, runValidator: true }\r\n-    );\r\n-    console.log(products);\r\n-    res.status(200).json({\r\n-      status: \"success\",\r\n-      data: {\r\n-        products,\r\n-      },\r\n-    });\r\n-  } catch (error) {\r\n-    res.json(error);\r\n-  }\r\n-};\r\n-exports.deleteProduct = async (req, res, next) => {\r\n-  try {\r\n-    const { productId } = req.params;\r\n-    await Product.findByIdAndDelete(productId);\r\n-    res.status(200).json({\r\n-      status: \"success\",\r\n-      message: \"Product deleted successfully\",\r\n-    });\r\n-  } catch (error) {\r\n-    res.json(error);\r\n-  }\r\n-};\r\n"
                },
                {
                    "date": 1651943294823,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -50,9 +50,9 @@\n         products,\r\n       },\r\n     });\r\n   } catch (error) {\r\n-    res.json(error);\r\n+    next(error);\r\n   }\r\n };\r\n exports.deleteProduct = async (req, res, next) => {\r\n   try {\r\n@@ -64,7 +64,7 @@\n       message: \"Product deleted successfully\",\r\n       deleteBy: userId,\r\n     });\r\n   } catch (error) {\r\n-    res.json(error);\r\n+    next(error);\r\n   }\r\n };\r\n"
                },
                {
                    "date": 1651943678801,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -28,9 +28,9 @@\n         products,\r\n       },\r\n     });\r\n   } catch (error) {\r\n-    res.json(error);\r\n+    next(error);\r\n   }\r\n };\r\n \r\n exports.updateProduct = async (req, res, next) => {\r\n"
                },
                {
                    "date": 1651944506132,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n const Product = require(\"../models/Product\");\r\n const slugify = require(\"slugify\");\r\n exports.getAllProducts = async (req, res, next) => {\r\n   try {\r\n-    const products = await Product.find().populate(\"createBy\");\r\n+    const products = await Product.find().populate(\"createBy\", \"name\");\r\n     res.status(200).json({\r\n       status: \"success\",\r\n       results: products.length,\r\n       data: {\r\n"
                },
                {
                    "date": 1651944728000,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,13 @@\n const Product = require(\"../models/Product\");\r\n const slugify = require(\"slugify\");\r\n exports.getAllProducts = async (req, res, next) => {\r\n   try {\r\n-    const products = await Product.find().populate(\"createBy\", \"name\");\r\n+    const products = await Product.find()\r\n+      .populate(\"createBy\", \"name\")\r\n+      .select(\r\n+        \"name slug price description offer reviews createBy productImage creatAt\"\r\n+      );\r\n     res.status(200).json({\r\n       status: \"success\",\r\n       results: products.length,\r\n       data: {\r\n"
                },
                {
                    "date": 1651944747151,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,9 +4,9 @@\n   try {\r\n     const products = await Product.find()\r\n       .populate(\"createBy\", \"name\")\r\n       .select(\r\n-        \"name slug price description offer reviews createBy productImage creatAt\"\r\n+        \"name slug price description offer reviews createBy productImage createAt\"\r\n       );\r\n     res.status(200).json({\r\n       status: \"success\",\r\n       results: products.length,\r\n"
                },
                {
                    "date": 1651944771893,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,13 +1,10 @@\n const Product = require(\"../models/Product\");\r\n const slugify = require(\"slugify\");\r\n exports.getAllProducts = async (req, res, next) => {\r\n   try {\r\n-    const products = await Product.find()\r\n-      .populate(\"createBy\", \"name\")\r\n-      .select(\r\n-        \"name slug price description offer reviews createBy productImage createAt\"\r\n-      );\r\n+    const products = await Product.find().populate(\"createBy\", \"name\");\r\n+\r\n     res.status(200).json({\r\n       status: \"success\",\r\n       results: products.length,\r\n       data: {\r\n"
                },
                {
                    "date": 1651944787796,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,10 +1,13 @@\n const Product = require(\"../models/Product\");\r\n const slugify = require(\"slugify\");\r\n exports.getAllProducts = async (req, res, next) => {\r\n   try {\r\n-    const products = await Product.find().populate(\"createBy\", \"name\");\r\n-\r\n+    const products = await Product.find()\r\n+      .populate(\"createBy\", \"name\")\r\n+      .select(\r\n+        \"name slug price description offer reviews createBy productImage createdAt\"\r\n+      );\r\n     res.status(200).json({\r\n       status: \"success\",\r\n       results: products.length,\r\n       data: {\r\n"
                },
                {
                    "date": 1651944816481,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,9 +2,9 @@\n const slugify = require(\"slugify\");\r\n exports.getAllProducts = async (req, res, next) => {\r\n   try {\r\n     const products = await Product.find()\r\n-      .populate(\"createBy\", \"name\")\r\n+      .populate(\"createBy\", \"name\", \"- _id\")\r\n       .select(\r\n         \"name slug price description offer reviews createBy productImage createdAt\"\r\n       );\r\n     res.status(200).json({\r\n"
                },
                {
                    "date": 1651944830526,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,9 +2,9 @@\n const slugify = require(\"slugify\");\r\n exports.getAllProducts = async (req, res, next) => {\r\n   try {\r\n     const products = await Product.find()\r\n-      .populate(\"createBy\", \"name\", \"- _id\")\r\n+      .populate(\"createBy\", \"name\", \"-_id\")\r\n       .select(\r\n         \"name slug price description offer reviews createBy productImage createdAt\"\r\n       );\r\n     res.status(200).json({\r\n"
                },
                {
                    "date": 1651944919945,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,11 +2,11 @@\n const slugify = require(\"slugify\");\r\n exports.getAllProducts = async (req, res, next) => {\r\n   try {\r\n     const products = await Product.find()\r\n-      .populate(\"createBy\", \"name\", \"-_id\")\r\n+      .populate(\"createBy\", \"name\")\r\n       .select(\r\n-        \"name slug price description offer reviews createBy productImage createdAt\"\r\n+        \"name slug price description offer reviews createBy productImage createdAt -_id\"\r\n       );\r\n     res.status(200).json({\r\n       status: \"success\",\r\n       results: products.length,\r\n"
                },
                {
                    "date": 1651944945697,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,9 +4,9 @@\n   try {\r\n     const products = await Product.find()\r\n       .populate(\"createBy\", \"name\")\r\n       .select(\r\n-        \"name slug price description offer reviews createBy productImage createdAt -_id\"\r\n+        \"name slug price description offer reviews createBy productImage createdAt\"\r\n       );\r\n     res.status(200).json({\r\n       status: \"success\",\r\n       results: products.length,\r\n"
                },
                {
                    "date": 1652190840950,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,7 @@\n const Product = require(\"../models/Product\");\r\n const slugify = require(\"slugify\");\r\n+const upload = requried(\"multer\");\r\n exports.getAllProducts = async (req, res, next) => {\r\n   try {\r\n     const products = await Product.find()\r\n       .populate(\"createBy\", \"name\")\r\n"
                },
                {
                    "date": 1652191337689,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,11 @@\n const Product = require(\"../models/Product\");\r\n const slugify = require(\"slugify\");\r\n-const upload = requried(\"multer\");\r\n+const multer = requried(\"multer\");\r\n+\r\n+const upload = multer({\r\n+  dest: \"public/Product_Image\",\r\n+});\r\n exports.getAllProducts = async (req, res, next) => {\r\n   try {\r\n     const products = await Product.find()\r\n       .populate(\"createBy\", \"name\")\r\n"
                },
                {
                    "date": 1652540540071,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,8 +22,9 @@\n   } catch (error) {\r\n     res.json(error);\r\n   }\r\n };\r\n+\r\n exports.createProduct = async (req, res, next) => {\r\n   try {\r\n     const { userId } = req.user;\r\n     const products = await Product.create({\r\n"
                },
                {
                    "date": 1652854274725,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,11 +1,11 @@\n const Product = require(\"../models/Product\");\r\n const slugify = require(\"slugify\");\r\n const multer = requried(\"multer\");\r\n \r\n-const upload = multer({\r\n-  dest: \"public/Product_Image\",\r\n-});\r\n+// const upload = multer({\r\n+//   dest: \"public/Product_Image\",\r\n+// });\r\n exports.getAllProducts = async (req, res, next) => {\r\n   try {\r\n     const products = await Product.find()\r\n       .populate(\"createBy\", \"name\")\r\n"
                },
                {
                    "date": 1652854280660,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n const Product = require(\"../models/Product\");\r\n const slugify = require(\"slugify\");\r\n-const multer = requried(\"multer\");\r\n+// const multer = requried(\"multer\");\r\n \r\n // const upload = multer({\r\n //   dest: \"public/Product_Image\",\r\n // });\r\n"
                },
                {
                    "date": 1653838185517,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,88 @@\n+const Product = require(\"../models/Product\");\r\n+const slugify = require(\"slugify\");\r\n+const ErrorHandler = require(\"../../utils/errorHandler\");\r\n+// const multer = requried(\"multer\");\r\n+\r\n+// const upload = multer({\r\n+//   dest: \"public/Product_Image\",\r\n+// });\r\n+exports.getAllProducts = async (req, res, next) => {\r\n+  try {\r\n+    const products = await Product.find()\r\n+      .populate(\"createBy\", \"name\")\r\n+      .select(\r\n+        \"name slug price description offer reviews createBy productImage createdAt\"\r\n+      );\r\n+    res.status(200).json({\r\n+      status: \"success\",\r\n+      results: products.length,\r\n+      data: {\r\n+        products,\r\n+      },\r\n+    });\r\n+  } catch (error) {\r\n+    res.json(error);\r\n+  }\r\n+};\r\n+\r\n+exports.getProductDetail = async (req, res, next) => {\r\n+  const product = await Product.findById(req.params.id);\r\n+  if (!product) {\r\n+    return next(new ErrorHandler());\r\n+  }\r\n+};\r\n+\r\n+exports.createProduct = async (req, res, next) => {\r\n+  try {\r\n+    const { userId } = req.user;\r\n+    const products = await Product.create({\r\n+      ...req.body,\r\n+      createBy: userId,\r\n+      slug: slugify(req.body.name),\r\n+    });\r\n+    res.status(200).json({\r\n+      status: \"success\",\r\n+      data: {\r\n+        products,\r\n+      },\r\n+    });\r\n+  } catch (error) {\r\n+    next(error);\r\n+  }\r\n+};\r\n+\r\n+exports.updateProduct = async (req, res, next) => {\r\n+  try {\r\n+    const { userId } = req.user;\r\n+    const { productId } = req.params;\r\n+    console.log(req.params);\r\n+    const products = await Product.findByIdAndUpdate(\r\n+      productId,\r\n+      { ...req.body, updateBy: userId, slug: slugify(req.body.name) },\r\n+      { new: true, runValidator: true }\r\n+    );\r\n+    console.log(products);\r\n+    res.status(200).json({\r\n+      status: \"success\",\r\n+      data: {\r\n+        products,\r\n+      },\r\n+    });\r\n+  } catch (error) {\r\n+    next(error);\r\n+  }\r\n+};\r\n+exports.deleteProduct = async (req, res, next) => {\r\n+  try {\r\n+    const { userId } = req.user;\r\n+    const { productId } = req.params;\r\n+    await Product.findByIdAndDelete(productId);\r\n+    res.status(200).json({\r\n+      status: \"success\",\r\n+      message: \"Product deleted successfully\",\r\n+      deleteBy: userId,\r\n+    });\r\n+  } catch (error) {\r\n+    next(error);\r\n+  }\r\n+};\r\n"
                },
                {
                    "date": 1653838364712,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,9 +27,9 @@\n \r\n exports.getProductDetail = async (req, res, next) => {\r\n   const product = await Product.findById(req.params.id);\r\n   if (!product) {\r\n-    return next(new ErrorHandler());\r\n+    return next(new ErrorHandler(\"Product not found in database\", 404));\r\n   }\r\n };\r\n \r\n exports.createProduct = async (req, res, next) => {\r\n@@ -85,84 +85,4 @@\n   } catch (error) {\r\n     next(error);\r\n   }\r\n };\r\n-const Product = require(\"../models/Product\");\r\n-const slugify = require(\"slugify\");\r\n-// const multer = requried(\"multer\");\r\n-\r\n-// const upload = multer({\r\n-//   dest: \"public/Product_Image\",\r\n-// });\r\n-exports.getAllProducts = async (req, res, next) => {\r\n-  try {\r\n-    const products = await Product.find()\r\n-      .populate(\"createBy\", \"name\")\r\n-      .select(\r\n-        \"name slug price description offer reviews createBy productImage createdAt\"\r\n-      );\r\n-    res.status(200).json({\r\n-      status: \"success\",\r\n-      results: products.length,\r\n-      data: {\r\n-        products,\r\n-      },\r\n-    });\r\n-  } catch (error) {\r\n-    res.json(error);\r\n-  }\r\n-};\r\n-\r\n-exports.createProduct = async (req, res, next) => {\r\n-  try {\r\n-    const { userId } = req.user;\r\n-    const products = await Product.create({\r\n-      ...req.body,\r\n-      createBy: userId,\r\n-      slug: slugify(req.body.name),\r\n-    });\r\n-    res.status(200).json({\r\n-      status: \"success\",\r\n-      data: {\r\n-        products,\r\n-      },\r\n-    });\r\n-  } catch (error) {\r\n-    next(error);\r\n-  }\r\n-};\r\n-\r\n-exports.updateProduct = async (req, res, next) => {\r\n-  try {\r\n-    const { userId } = req.user;\r\n-    const { productId } = req.params;\r\n-    console.log(req.params);\r\n-    const products = await Product.findByIdAndUpdate(\r\n-      productId,\r\n-      { ...req.body, updateBy: userId, slug: slugify(req.body.name) },\r\n-      { new: true, runValidator: true }\r\n-    );\r\n-    console.log(products);\r\n-    res.status(200).json({\r\n-      status: \"success\",\r\n-      data: {\r\n-        products,\r\n-      },\r\n-    });\r\n-  } catch (error) {\r\n-    next(error);\r\n-  }\r\n-};\r\n-exports.deleteProduct = async (req, res, next) => {\r\n-  try {\r\n-    const { userId } = req.user;\r\n-    const { productId } = req.params;\r\n-    await Product.findByIdAndDelete(productId);\r\n-    res.status(200).json({\r\n-      status: \"success\",\r\n-      message: \"Product deleted successfully\",\r\n-      deleteBy: userId,\r\n-    });\r\n-  } catch (error) {\r\n-    next(error);\r\n-  }\r\n-};\r\n"
                },
                {
                    "date": 1653838935567,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,8 +29,12 @@\n   const product = await Product.findById(req.params.id);\r\n   if (!product) {\r\n     return next(new ErrorHandler(\"Product not found in database\", 404));\r\n   }\r\n+  res.status(200).json({\r\n+    success: true,\r\n+    product,\r\n+  });\r\n };\r\n \r\n exports.createProduct = async (req, res, next) => {\r\n   try {\r\n"
                },
                {
                    "date": 1654141578970,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,100 @@\n+const Product = require(\"../models/Product\");\r\n+const slugify = require(\"slugify\");\r\n+const ErrorHandler = require(\"../../utils/errorHandler\");\r\n+// const multer = requried(\"multer\");\r\n+\r\n+// const upload = multer({\r\n+//   dest: \"public/Product_Image\",\r\n+// });\r\n+exports.getAllProducts = async (req, res, next) => {\r\n+  try {\r\n+    const products = await Product.find()\r\n+      .populate(\"createBy\", \"name\")\r\n+      .select(\r\n+        \"name slug price description offer reviews createBy productImage createdAt\"\r\n+      );\r\n+    res.status(200).json({\r\n+      status: \"success\",\r\n+      results: products.length,\r\n+      data: {\r\n+        products,\r\n+      },\r\n+    });\r\n+  } catch (error) {\r\n+    res.json(error);\r\n+  }\r\n+};\r\n+\r\n+exports.getProductDetail = async (req, res, next) => {\r\n+  const product = await Product.findById(req.params.id);\r\n+  if (!product) {\r\n+    return next(new ErrorHandler(\"Product not found in database\", 404));\r\n+  }\r\n+  res.status(200).json({\r\n+    success: true,\r\n+    product,\r\n+  });\r\n+};\r\n+\r\n+exports.createProduct = async (req, res, next) => {\r\n+  // try {\r\n+  //   const { userId } = req.user;\r\n+  //   const products = await Product.create({\r\n+  //     ...req.body,\r\n+  //     createBy: userId,\r\n+  //     slug: slugify(req.body.name),\r\n+  //   });\r\n+  //   res.status(200).json({\r\n+  //     status: \"success\",\r\n+  //     data: {\r\n+  //       products,\r\n+  //     },\r\n+  //   });\r\n+  // } catch (error) {\r\n+  //   next(error);\r\n+  // }\r\n+\r\n+  const product = await Product.create(req.body);\r\n+  res.status(200).json({\r\n+    status: \"success\",\r\n+    data: {\r\n+      products,\r\n+    },\r\n+  });\r\n+};\r\n+\r\n+exports.updateProduct = async (req, res, next) => {\r\n+  try {\r\n+    const { userId } = req.user;\r\n+    const { productId } = req.params;\r\n+    console.log(req.params);\r\n+    const products = await Product.findByIdAndUpdate(\r\n+      productId,\r\n+      { ...req.body, updateBy: userId, slug: slugify(req.body.name) },\r\n+      { new: true, runValidator: true }\r\n+    );\r\n+    console.log(products);\r\n+    res.status(200).json({\r\n+      status: \"success\",\r\n+      data: {\r\n+        products,\r\n+      },\r\n+    });\r\n+  } catch (error) {\r\n+    next(error);\r\n+  }\r\n+};\r\n+exports.deleteProduct = async (req, res, next) => {\r\n+  try {\r\n+    const { userId } = req.user;\r\n+    const { productId } = req.params;\r\n+    await Product.findByIdAndDelete(productId);\r\n+    res.status(200).json({\r\n+      status: \"success\",\r\n+      message: \"Product deleted successfully\",\r\n+      deleteBy: userId,\r\n+    });\r\n+  } catch (error) {\r\n+    next(error);\r\n+  }\r\n+};\r\n"
                },
                {
                    "date": 1654141940490,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -97,96 +97,4 @@\n   } catch (error) {\r\n     next(error);\r\n   }\r\n };\r\n-const Product = require(\"../models/Product\");\r\n-const slugify = require(\"slugify\");\r\n-const ErrorHandler = require(\"../../utils/errorHandler\");\r\n-// const multer = requried(\"multer\");\r\n-\r\n-// const upload = multer({\r\n-//   dest: \"public/Product_Image\",\r\n-// });\r\n-exports.getAllProducts = async (req, res, next) => {\r\n-  try {\r\n-    const products = await Product.find()\r\n-      .populate(\"createBy\", \"name\")\r\n-      .select(\r\n-        \"name slug price description offer reviews createBy productImage createdAt\"\r\n-      );\r\n-    res.status(200).json({\r\n-      status: \"success\",\r\n-      results: products.length,\r\n-      data: {\r\n-        products,\r\n-      },\r\n-    });\r\n-  } catch (error) {\r\n-    res.json(error);\r\n-  }\r\n-};\r\n-\r\n-exports.getProductDetail = async (req, res, next) => {\r\n-  const product = await Product.findById(req.params.id);\r\n-  if (!product) {\r\n-    return next(new ErrorHandler(\"Product not found in database\", 404));\r\n-  }\r\n-  res.status(200).json({\r\n-    success: true,\r\n-    product,\r\n-  });\r\n-};\r\n-\r\n-exports.createProduct = async (req, res, next) => {\r\n-  try {\r\n-    const { userId } = req.user;\r\n-    const products = await Product.create({\r\n-      ...req.body,\r\n-      createBy: userId,\r\n-      slug: slugify(req.body.name),\r\n-    });\r\n-    res.status(200).json({\r\n-      status: \"success\",\r\n-      data: {\r\n-        products,\r\n-      },\r\n-    });\r\n-  } catch (error) {\r\n-    next(error);\r\n-  }\r\n-};\r\n-\r\n-exports.updateProduct = async (req, res, next) => {\r\n-  try {\r\n-    const { userId } = req.user;\r\n-    const { productId } = req.params;\r\n-    console.log(req.params);\r\n-    const products = await Product.findByIdAndUpdate(\r\n-      productId,\r\n-      { ...req.body, updateBy: userId, slug: slugify(req.body.name) },\r\n-      { new: true, runValidator: true }\r\n-    );\r\n-    console.log(products);\r\n-    res.status(200).json({\r\n-      status: \"success\",\r\n-      data: {\r\n-        products,\r\n-      },\r\n-    });\r\n-  } catch (error) {\r\n-    next(error);\r\n-  }\r\n-};\r\n-exports.deleteProduct = async (req, res, next) => {\r\n-  try {\r\n-    const { userId } = req.user;\r\n-    const { productId } = req.params;\r\n-    await Product.findByIdAndDelete(productId);\r\n-    res.status(200).json({\r\n-      status: \"success\",\r\n-      message: \"Product deleted successfully\",\r\n-      deleteBy: userId,\r\n-    });\r\n-  } catch (error) {\r\n-    next(error);\r\n-  }\r\n-};\r\n"
                },
                {
                    "date": 1654142365416,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -57,9 +57,9 @@\n   const product = await Product.create(req.body);\r\n   res.status(200).json({\r\n     status: \"success\",\r\n     data: {\r\n-      products,\r\n+      product,\r\n     },\r\n   });\r\n };\r\n \r\n"
                },
                {
                    "date": 1654142910820,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -63,27 +63,28 @@\n   });\r\n };\r\n \r\n exports.updateProduct = async (req, res, next) => {\r\n-  try {\r\n-    const { userId } = req.user;\r\n-    const { productId } = req.params;\r\n-    console.log(req.params);\r\n-    const products = await Product.findByIdAndUpdate(\r\n-      productId,\r\n-      { ...req.body, updateBy: userId, slug: slugify(req.body.name) },\r\n-      { new: true, runValidator: true }\r\n-    );\r\n-    console.log(products);\r\n-    res.status(200).json({\r\n-      status: \"success\",\r\n-      data: {\r\n-        products,\r\n-      },\r\n-    });\r\n-  } catch (error) {\r\n-    next(error);\r\n-  }\r\n+  // try {\r\n+  //   const { userId } = req.user;\r\n+  //   const { productId } = req.params;\r\n+  //   console.log(req.params);\r\n+  //   const products = await Product.findByIdAndUpdate(\r\n+  //     productId,\r\n+  //     { ...req.body, updateBy: userId, slug: slugify(req.body.name) },\r\n+  //     { new: true, runValidator: true }\r\n+  //   );\r\n+  //   console.log(products);\r\n+  //   res.status(200).json({\r\n+  //     status: \"success\",\r\n+  //     data: {\r\n+  //       products,\r\n+  //     },\r\n+  //   });\r\n+  // } catch (error) {\r\n+  //   next(error);\r\n+  // }\r\n+  const product = await Product.findByIdAndUpdate(req.params.id);\r\n };\r\n exports.deleteProduct = async (req, res, next) => {\r\n   try {\r\n     const { userId } = req.user;\r\n"
                },
                {
                    "date": 1654143070028,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -82,9 +82,21 @@\n   //   });\r\n   // } catch (error) {\r\n   //   next(error);\r\n   // }\r\n-  const product = await Product.findByIdAndUpdate(req.params.id);\r\n+  const product = await Product.findById(req.params.id);\r\n+  if (!product) {\r\n+    res.status(500).json({\r\n+      success: false,\r\n+      message: \"Product not found\",\r\n+    });\r\n+  }\r\n+  (product = await Product.findByIdAndUpdate(req.params.id, req.body)),\r\n+    {\r\n+      new: true,\r\n+      runValidator: true,\r\n+      useFindAndModify: false,\r\n+    };\r\n };\r\n exports.deleteProduct = async (req, res, next) => {\r\n   try {\r\n     const { userId } = req.user;\r\n"
                },
                {
                    "date": 1654143152600,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -84,19 +84,22 @@\n   //   next(error);\r\n   // }\r\n   const product = await Product.findById(req.params.id);\r\n   if (!product) {\r\n-    res.status(500).json({\r\n+    return res.status(500).json({\r\n       success: false,\r\n       message: \"Product not found\",\r\n     });\r\n   }\r\n-  (product = await Product.findByIdAndUpdate(req.params.id, req.body)),\r\n-    {\r\n-      new: true,\r\n-      runValidator: true,\r\n-      useFindAndModify: false,\r\n-    };\r\n+  product = await Product.findByIdAndUpdate(req.params.id, req.body, {\r\n+    new: true,\r\n+    runValidator: true,\r\n+    useFindAndModify: false,\r\n+  });\r\n+  res.status(200).json({\r\n+    success: true,\r\n+    product,\r\n+  });\r\n };\r\n exports.deleteProduct = async (req, res, next) => {\r\n   try {\r\n     const { userId } = req.user;\r\n"
                },
                {
                    "date": 1654143744329,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -82,9 +82,9 @@\n   //   });\r\n   // } catch (error) {\r\n   //   next(error);\r\n   // }\r\n-  const product = await Product.findById(req.params.id);\r\n+  let product = await Product.findById(req.params.id);\r\n   if (!product) {\r\n     return res.status(500).json({\r\n       success: false,\r\n       message: \"Product not found\",\r\n"
                },
                {
                    "date": 1654143808737,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -82,20 +82,25 @@\n   //   });\r\n   // } catch (error) {\r\n   //   next(error);\r\n   // }\r\n-  let product = await Product.findById(req.params.id);\r\n-  if (!product) {\r\n-    return res.status(500).json({\r\n-      success: false,\r\n-      message: \"Product not found\",\r\n-    });\r\n-  }\r\n-  product = await Product.findByIdAndUpdate(req.params.id, req.body, {\r\n+  // let product = await Product.findById(req.params.id);\r\n+  // if (!product) {\r\n+  //   return res.status(500).json({\r\n+  //     success: false,\r\n+  //     message: \"Product not found\",\r\n+  //   });\r\n+  // }\r\n+  const product = await Product.findByIdAndUpdate(req.params.id, req.body, {\r\n     new: true,\r\n     runValidator: true,\r\n     useFindAndModify: false,\r\n   });\r\n+  if (!product) {\r\n+      return res.status(500).json({\r\n+        success: false,\r\n+        message: \"Product not found\",\r\n+      });\r\n   res.status(200).json({\r\n     success: true,\r\n     product,\r\n   });\r\n"
                },
                {
                    "date": 1654143864125,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -94,13 +94,13 @@\n     new: true,\r\n     runValidator: true,\r\n     useFindAndModify: false,\r\n   });\r\n-  if (!product) {\r\n-      return res.status(500).json({\r\n-        success: false,\r\n-        message: \"Product not found\",\r\n-      });\r\n+  // if (!product) {\r\n+  //     return res.status(500).json({\r\n+  //       success: false,\r\n+  //       message: \"Product not found\",\r\n+  //     });\r\n   res.status(200).json({\r\n     success: true,\r\n     product,\r\n   });\r\n"
                },
                {
                    "date": 1654143953774,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -89,8 +89,11 @@\n   //     success: false,\r\n   //     message: \"Product not found\",\r\n   //   });\r\n   // }\r\n+  if (!product) {\r\n+    return next(new ErrorHandler(\"Product not found in database\", 404));\r\n+  }\r\n   const product = await Product.findByIdAndUpdate(req.params.id, req.body, {\r\n     new: true,\r\n     runValidator: true,\r\n     useFindAndModify: false,\r\n"
                },
                {
                    "date": 1654143967448,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -89,21 +89,17 @@\n   //     success: false,\r\n   //     message: \"Product not found\",\r\n   //   });\r\n   // }\r\n-  if (!product) {\r\n-    return next(new ErrorHandler(\"Product not found in database\", 404));\r\n-  }\r\n+\r\n   const product = await Product.findByIdAndUpdate(req.params.id, req.body, {\r\n     new: true,\r\n     runValidator: true,\r\n     useFindAndModify: false,\r\n   });\r\n-  // if (!product) {\r\n-  //     return res.status(500).json({\r\n-  //       success: false,\r\n-  //       message: \"Product not found\",\r\n-  //     });\r\n+  if (!product) {\r\n+    return next(new ErrorHandler(\"Product not found in database\", 404));\r\n+  }\r\n   res.status(200).json({\r\n     success: true,\r\n     product,\r\n   });\r\n"
                },
                {
                    "date": 1654143996492,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -95,11 +95,11 @@\n     new: true,\r\n     runValidator: true,\r\n     useFindAndModify: false,\r\n   });\r\n-  if (!product) {\r\n-    return next(new ErrorHandler(\"Product not found in database\", 404));\r\n-  }\r\n+  // if (!product) {\r\n+  //   return next(new ErrorHandler(\"Product not found in database\", 404));\r\n+  // }\r\n   res.status(200).json({\r\n     success: true,\r\n     product,\r\n   });\r\n"
                },
                {
                    "date": 1654144117608,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -104,17 +104,22 @@\n     product,\r\n   });\r\n };\r\n exports.deleteProduct = async (req, res, next) => {\r\n-  try {\r\n-    const { userId } = req.user;\r\n-    const { productId } = req.params;\r\n-    await Product.findByIdAndDelete(productId);\r\n-    res.status(200).json({\r\n-      status: \"success\",\r\n-      message: \"Product deleted successfully\",\r\n-      deleteBy: userId,\r\n-    });\r\n-  } catch (error) {\r\n-    next(error);\r\n-  }\r\n+  // try {\r\n+  //   const { userId } = req.user;\r\n+  //   const { productId } = req.params;\r\n+  //   await Product.findByIdAndDelete(productId);\r\n+  //   res.status(200).json({\r\n+  //     status: \"success\",\r\n+  //     message: \"Product deleted successfully\",\r\n+  //     deleteBy: userId,\r\n+  //   });\r\n+  // } catch (error) {\r\n+  //   next(error);\r\n+  // }\r\n+  const product = await Product.findByIdAndDelete(req.params.id);\r\n+  res.status(200).json({\r\n+    success: true,\r\n+    message: \"Product deleted successfully\",\r\n+  });\r\n };\r\n"
                },
                {
                    "date": 1654224034062,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,16 +25,20 @@\n   }\r\n };\r\n \r\n exports.getProductDetail = async (req, res, next) => {\r\n-  const product = await Product.findById(req.params.id);\r\n-  if (!product) {\r\n-    return next(new ErrorHandler(\"Product not found in database\", 404));\r\n+  try {\r\n+    const product = await Product.findById(req.params.id);\r\n+    if (!product) {\r\n+      return next(new ErrorHandler(\"Product not found in database\", 404));\r\n+    }\r\n+    res.status(200).json({\r\n+      success: true,\r\n+      product,\r\n+    });\r\n+  } catch (error) {\r\n+    res.json(error);\r\n   }\r\n-  res.status(200).json({\r\n-    success: true,\r\n-    product,\r\n-  });\r\n };\r\n \r\n exports.createProduct = async (req, res, next) => {\r\n   // try {\r\n"
                },
                {
                    "date": 1654224224804,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,8 @@\n const Product = require(\"../models/Product\");\r\n const slugify = require(\"slugify\");\r\n const ErrorHandler = require(\"../../utils/errorHandler\");\r\n+const catchAsyncError = require(\"../middlewares/catchAsyncError\");\r\n // const multer = requried(\"multer\");\r\n \r\n // const upload = multer({\r\n //   dest: \"public/Product_Image\",\r\n"
                },
                {
                    "date": 1654224245132,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,9 +25,9 @@\n     res.json(error);\r\n   }\r\n };\r\n \r\n-exports.getProductDetail = async (req, res, next) => {\r\n+exports.getProductDetail = catchAsyncError(async (req, res, next) => {\r\n   try {\r\n     const product = await Product.findById(req.params.id);\r\n     if (!product) {\r\n       return next(new ErrorHandler(\"Product not found in database\", 404));\r\n@@ -38,9 +38,9 @@\n     });\r\n   } catch (error) {\r\n     res.json(error);\r\n   }\r\n-};\r\n+});\r\n \r\n exports.createProduct = async (req, res, next) => {\r\n   // try {\r\n   //   const { userId } = req.user;\r\n"
                },
                {
                    "date": 1654224260706,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,20 +26,16 @@\n   }\r\n };\r\n \r\n exports.getProductDetail = catchAsyncError(async (req, res, next) => {\r\n-  try {\r\n-    const product = await Product.findById(req.params.id);\r\n-    if (!product) {\r\n-      return next(new ErrorHandler(\"Product not found in database\", 404));\r\n-    }\r\n-    res.status(200).json({\r\n-      success: true,\r\n-      product,\r\n-    });\r\n-  } catch (error) {\r\n-    res.json(error);\r\n+  const product = await Product.findById(req.params.id);\r\n+  if (!product) {\r\n+    return next(new ErrorHandler(\"Product not found in database\", 404));\r\n   }\r\n+  res.status(200).json({\r\n+    success: true,\r\n+    product,\r\n+  });\r\n });\r\n \r\n exports.createProduct = async (req, res, next) => {\r\n   // try {\r\n"
                },
                {
                    "date": 1654224322415,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,16 +26,20 @@\n   }\r\n };\r\n \r\n exports.getProductDetail = catchAsyncError(async (req, res, next) => {\r\n-  const product = await Product.findById(req.params.id);\r\n-  if (!product) {\r\n-    return next(new ErrorHandler(\"Product not found in database\", 404));\r\n+  try {\r\n+    const product = await Product.findById(req.params.id);\r\n+    // if (!product) {\r\n+    //   return next(new ErrorHandler(\"Product not found in database\", 404));\r\n+    // }\r\n+    res.status(200).json({\r\n+      success: true,\r\n+      product,\r\n+    });\r\n+  } catch (error) {\r\n+    next(new ErrorHandler(\"Product not found in database\", 404));\r\n   }\r\n-  res.status(200).json({\r\n-    success: true,\r\n-    product,\r\n-  });\r\n });\r\n \r\n exports.createProduct = async (req, res, next) => {\r\n   // try {\r\n"
                },
                {
                    "date": 1654224379489,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -32,9 +32,9 @@\n     // if (!product) {\r\n     //   return next(new ErrorHandler(\"Product not found in database\", 404));\r\n     // }\r\n     res.status(200).json({\r\n-      success: true,\r\n+      // success: true,\r\n       product,\r\n     });\r\n   } catch (error) {\r\n     next(new ErrorHandler(\"Product not found in database\", 404));\r\n"
                },
                {
                    "date": 1654224466277,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -28,11 +28,11 @@\n \r\n exports.getProductDetail = catchAsyncError(async (req, res, next) => {\r\n   try {\r\n     const product = await Product.findById(req.params.id);\r\n-    // if (!product) {\r\n-    //   return next(new ErrorHandler(\"Product not found in database\", 404));\r\n-    // }\r\n+    if (product === null) {\r\n+      return next(new ErrorHandler(\"No Prodcut Data\", 404));\r\n+    }\r\n     res.status(200).json({\r\n       // success: true,\r\n       product,\r\n     });\r\n"
                },
                {
                    "date": 1654224499519,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -32,9 +32,9 @@\n     if (product === null) {\r\n       return next(new ErrorHandler(\"No Prodcut Data\", 404));\r\n     }\r\n     res.status(200).json({\r\n-      // success: true,\r\n+      success: true,\r\n       product,\r\n     });\r\n   } catch (error) {\r\n     next(new ErrorHandler(\"Product not found in database\", 404));\r\n"
                },
                {
                    "date": 1654224510758,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -28,9 +28,9 @@\n \r\n exports.getProductDetail = catchAsyncError(async (req, res, next) => {\r\n   try {\r\n     const product = await Product.findById(req.params.id);\r\n-    if (product === null) {\r\n+    if (product == null) {\r\n       return next(new ErrorHandler(\"No Prodcut Data\", 404));\r\n     }\r\n     res.status(200).json({\r\n       success: true,\r\n"
                },
                {
                    "date": 1654224537455,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -28,16 +28,17 @@\n \r\n exports.getProductDetail = catchAsyncError(async (req, res, next) => {\r\n   try {\r\n     const product = await Product.findById(req.params.id);\r\n-    if (product == null) {\r\n-      return next(new ErrorHandler(\"No Prodcut Data\", 404));\r\n-    }\r\n+\r\n     res.status(200).json({\r\n       success: true,\r\n       product,\r\n     });\r\n   } catch (error) {\r\n+    if (product == null) {\r\n+      return next(new ErrorHandler(\"No Prodcut Data\", 404));\r\n+    }\r\n     next(new ErrorHandler(\"Product not found in database\", 404));\r\n   }\r\n });\r\n \r\n"
                },
                {
                    "date": 1654224577440,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,8 +21,11 @@\n         products,\r\n       },\r\n     });\r\n   } catch (error) {\r\n+    if (product == null) {\r\n+      return next(new ErrorHandler(\"No Prodcut Data\", 404));\r\n+    }\r\n     res.json(error);\r\n   }\r\n };\r\n \r\n@@ -34,11 +37,8 @@\n       success: true,\r\n       product,\r\n     });\r\n   } catch (error) {\r\n-    if (product == null) {\r\n-      return next(new ErrorHandler(\"No Prodcut Data\", 404));\r\n-    }\r\n     next(new ErrorHandler(\"Product not found in database\", 404));\r\n   }\r\n });\r\n \r\n"
                },
                {
                    "date": 1654224794654,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -28,9 +28,9 @@\n     res.json(error);\r\n   }\r\n };\r\n \r\n-exports.getProductDetail = catchAsyncError(async (req, res, next) => {\r\n+exports.getProductDetail = async (req, res, next) => {\r\n   try {\r\n     const product = await Product.findById(req.params.id);\r\n \r\n     res.status(200).json({\r\n@@ -39,9 +39,9 @@\n     });\r\n   } catch (error) {\r\n     next(new ErrorHandler(\"Product not found in database\", 404));\r\n   }\r\n-});\r\n+};\r\n \r\n exports.createProduct = async (req, res, next) => {\r\n   // try {\r\n   //   const { userId } = req.user;\r\n"
                },
                {
                    "date": 1654225235971,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -37,9 +37,10 @@\n       success: true,\r\n       product,\r\n     });\r\n   } catch (error) {\r\n-    next(new ErrorHandler(\"Product not found in database\", 404));\r\n+    // next(new ErrorHandler(\"Product not found in database\", 404));\r\n+    res.json(error);\r\n   }\r\n };\r\n \r\n exports.createProduct = async (req, res, next) => {\r\n"
                },
                {
                    "date": 1654225286989,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -37,10 +37,9 @@\n       success: true,\r\n       product,\r\n     });\r\n   } catch (error) {\r\n-    // next(new ErrorHandler(\"Product not found in database\", 404));\r\n-    res.json(error);\r\n+    next(new ErrorHandler(\"Product not found in database\", 404));\r\n   }\r\n };\r\n \r\n exports.createProduct = async (req, res, next) => {\r\n"
                },
                {
                    "date": 1654225303335,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,9 +24,9 @@\n   } catch (error) {\r\n     if (product == null) {\r\n       return next(new ErrorHandler(\"No Prodcut Data\", 404));\r\n     }\r\n-    res.json(error);\r\n+    // res.json(error);\r\n   }\r\n };\r\n \r\n exports.getProductDetail = async (req, res, next) => {\r\n"
                },
                {
                    "date": 1654225349401,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,11 +21,10 @@\n         products,\r\n       },\r\n     });\r\n   } catch (error) {\r\n-    if (product == null) {\r\n-      return next(new ErrorHandler(\"No Prodcut Data\", 404));\r\n-    }\r\n+    next(new ErrorHandler(\"No Prodcut Data\", 404));\r\n+\r\n     // res.json(error);\r\n   }\r\n };\r\n \r\n"
                },
                {
                    "date": 1654225377968,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,18 +13,19 @@\n       .populate(\"createBy\", \"name\")\r\n       .select(\r\n         \"name slug price description offer reviews createBy productImage createdAt\"\r\n       );\r\n+    if (products == null) {\r\n+      return next(new ErrorHandler(\"No Prodcut Data\", 404));\r\n+    }\r\n     res.status(200).json({\r\n       status: \"success\",\r\n       results: products.length,\r\n       data: {\r\n         products,\r\n       },\r\n     });\r\n   } catch (error) {\r\n-    next(new ErrorHandler(\"No Prodcut Data\", 404));\r\n-\r\n     // res.json(error);\r\n   }\r\n };\r\n \r\n"
                },
                {
                    "date": 1654225388926,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,9 +13,9 @@\n       .populate(\"createBy\", \"name\")\r\n       .select(\r\n         \"name slug price description offer reviews createBy productImage createdAt\"\r\n       );\r\n-    if (products == null) {\r\n+    if (products === null) {\r\n       return next(new ErrorHandler(\"No Prodcut Data\", 404));\r\n     }\r\n     res.status(200).json({\r\n       status: \"success\",\r\n"
                },
                {
                    "date": 1654225413962,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,19 +13,20 @@\n       .populate(\"createBy\", \"name\")\r\n       .select(\r\n         \"name slug price description offer reviews createBy productImage createdAt\"\r\n       );\r\n-    if (products === null) {\r\n-      return next(new ErrorHandler(\"No Prodcut Data\", 404));\r\n-    }\r\n+\r\n     res.status(200).json({\r\n       status: \"success\",\r\n       results: products.length,\r\n       data: {\r\n         products,\r\n       },\r\n     });\r\n   } catch (error) {\r\n+    if (products === null) {\r\n+      return next(new ErrorHandler(\"No Prodcut Data\", 404));\r\n+    }\r\n     // res.json(error);\r\n   }\r\n };\r\n \r\n"
                },
                {
                    "date": 1654225489346,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,11 +22,8 @@\n         products,\r\n       },\r\n     });\r\n   } catch (error) {\r\n-    if (products === null) {\r\n-      return next(new ErrorHandler(\"No Prodcut Data\", 404));\r\n-    }\r\n     // res.json(error);\r\n   }\r\n };\r\n \r\n"
                },
                {
                    "date": 1654225557104,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,8 +14,11 @@\n       .select(\r\n         \"name slug price description offer reviews createBy productImage createdAt\"\r\n       );\r\n \r\n+    if (products == null) {\r\n+      next(new ErrorHandler(\"No Product Data\", 404));\r\n+    }\r\n     res.status(200).json({\r\n       status: \"success\",\r\n       results: products.length,\r\n       data: {\r\n"
                },
                {
                    "date": 1654225809500,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,12 +14,12 @@\n       .select(\r\n         \"name slug price description offer reviews createBy productImage createdAt\"\r\n       );\r\n \r\n-    if (products == null) {\r\n-      next(new ErrorHandler(\"No Product Data\", 404));\r\n-    }\r\n     res.status(200).json({\r\n+      if(products = null) {\r\n+        next(new ErrorHandler(\"No Product Data\", 404));\r\n+      },\r\n       status: \"success\",\r\n       results: products.length,\r\n       data: {\r\n         products,\r\n"
                },
                {
                    "date": 1654225835278,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,11 +15,8 @@\n         \"name slug price description offer reviews createBy productImage createdAt\"\r\n       );\r\n \r\n     res.status(200).json({\r\n-      if(products = null) {\r\n-        next(new ErrorHandler(\"No Product Data\", 404));\r\n-      },\r\n       status: \"success\",\r\n       results: products.length,\r\n       data: {\r\n         products,\r\n"
                },
                {
                    "date": 1654225870864,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,8 +22,10 @@\n         products,\r\n       },\r\n     });\r\n   } catch (error) {\r\n+    next(new ErrorHandler(\"No Product Data\", 404));\r\n+\r\n     // res.json(error);\r\n   }\r\n };\r\n \r\n"
                },
                {
                    "date": 1654226018065,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -59,15 +59,19 @@\n   // } catch (error) {\r\n   //   next(error);\r\n   // }\r\n \r\n-  const product = await Product.create(req.body);\r\n-  res.status(200).json({\r\n-    status: \"success\",\r\n-    data: {\r\n-      product,\r\n-    },\r\n-  });\r\n+  try {\r\n+    const product = await Product.create(req.body);\r\n+    res.status(200).json({\r\n+      status: \"success\",\r\n+      data: {\r\n+        product,\r\n+      },\r\n+    });\r\n+  } catch (error) {\r\n+    next(error);\r\n+  }\r\n };\r\n \r\n exports.updateProduct = async (req, res, next) => {\r\n   // try {\r\n"
                },
                {
                    "date": 1654228282674,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -42,78 +42,46 @@\n   }\r\n };\r\n \r\n exports.createProduct = async (req, res, next) => {\r\n-  // try {\r\n-  //   const { userId } = req.user;\r\n-  //   const products = await Product.create({\r\n-  //     ...req.body,\r\n-  //     createBy: userId,\r\n-  //     slug: slugify(req.body.name),\r\n-  //   });\r\n-  //   res.status(200).json({\r\n-  //     status: \"success\",\r\n-  //     data: {\r\n-  //       products,\r\n-  //     },\r\n-  //   });\r\n-  // } catch (error) {\r\n-  //   next(error);\r\n-  // }\r\n-\r\n   try {\r\n-    const product = await Product.create(req.body);\r\n+    const { userId } = req.user;\r\n+    const products = await Product.create({\r\n+      ...req.body,\r\n+      createBy: userId,\r\n+      slug: slugify(req.body.name),\r\n+    });\r\n     res.status(200).json({\r\n       status: \"success\",\r\n       data: {\r\n-        product,\r\n+        products,\r\n       },\r\n     });\r\n   } catch (error) {\r\n     next(error);\r\n   }\r\n };\r\n \r\n exports.updateProduct = async (req, res, next) => {\r\n-  // try {\r\n-  //   const { userId } = req.user;\r\n-  //   const { productId } = req.params;\r\n-  //   console.log(req.params);\r\n-  //   const products = await Product.findByIdAndUpdate(\r\n-  //     productId,\r\n-  //     { ...req.body, updateBy: userId, slug: slugify(req.body.name) },\r\n-  //     { new: true, runValidator: true }\r\n-  //   );\r\n-  //   console.log(products);\r\n-  //   res.status(200).json({\r\n-  //     status: \"success\",\r\n-  //     data: {\r\n-  //       products,\r\n-  //     },\r\n-  //   });\r\n-  // } catch (error) {\r\n-  //   next(error);\r\n-  // }\r\n-  // let product = await Product.findById(req.params.id);\r\n-  // if (!product) {\r\n-  //   return res.status(500).json({\r\n-  //     success: false,\r\n-  //     message: \"Product not found\",\r\n-  //   });\r\n-  // }\r\n-\r\n-  const product = await Product.findByIdAndUpdate(req.params.id, req.body, {\r\n-    new: true,\r\n-    runValidator: true,\r\n-    useFindAndModify: false,\r\n-  });\r\n-  // if (!product) {\r\n-  //   return next(new ErrorHandler(\"Product not found in database\", 404));\r\n-  // }\r\n-  res.status(200).json({\r\n-    success: true,\r\n-    product,\r\n-  });\r\n+  try {\r\n+    const { userId } = req.user;\r\n+    const { productId } = req.params;\r\n+    console.log(req.params);\r\n+    const products = await Product.findByIdAndUpdate(\r\n+      productId,\r\n+      { ...req.body, updateBy: userId, slug: slugify(req.body.name) },\r\n+      { new: true, runValidator: true }\r\n+    );\r\n+    console.log(products);\r\n+    res.status(200).json({\r\n+      status: \"success\",\r\n+      data: {\r\n+        products,\r\n+      },\r\n+    });\r\n+  } catch (error) {\r\n+    next(error);\r\n+  }\r\n };\r\n exports.deleteProduct = async (req, res, next) => {\r\n   // try {\r\n   //   const { userId } = req.user;\r\n"
                },
                {
                    "date": 1654228645552,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -82,22 +82,22 @@\n     next(error);\r\n   }\r\n };\r\n exports.deleteProduct = async (req, res, next) => {\r\n-  // try {\r\n-  //   const { userId } = req.user;\r\n-  //   const { productId } = req.params;\r\n-  //   await Product.findByIdAndDelete(productId);\r\n-  //   res.status(200).json({\r\n-  //     status: \"success\",\r\n-  //     message: \"Product deleted successfully\",\r\n-  //     deleteBy: userId,\r\n-  //   });\r\n-  // } catch (error) {\r\n-  //   next(error);\r\n-  // }\r\n-  const product = await Product.findByIdAndDelete(req.params.id);\r\n-  res.status(200).json({\r\n-    success: true,\r\n-    message: \"Product deleted successfully\",\r\n-  });\r\n+  try {\r\n+    const { userId } = req.user;\r\n+    const { productId } = req.params;\r\n+    await Product.findByIdAndDelete(productId);\r\n+    res.status(200).json({\r\n+      status: \"success\",\r\n+      message: \"Product deleted successfully\",\r\n+      deleteBy: userId,\r\n+    });\r\n+  } catch (error) {\r\n+    next(error);\r\n+  }\r\n+  // const product = await Product.findByIdAndDelete(req.params.id);\r\n+  // res.status(200).json({\r\n+  //   success: true,\r\n+  //   message: \"Product deleted successfully\",\r\n+  // });\r\n };\r\n"
                },
                {
                    "date": 1654228744918,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,42 +6,42 @@\n \r\n // const upload = multer({\r\n //   dest: \"public/Product_Image\",\r\n // });\r\n-exports.getAllProducts = async (req, res, next) => {\r\n-  try {\r\n-    const products = await Product.find()\r\n-      .populate(\"createBy\", \"name\")\r\n-      .select(\r\n-        \"name slug price description offer reviews createBy productImage createdAt\"\r\n-      );\r\n+// exports.getAllProducts = async (req, res, next) => {\r\n+//   try {\r\n+//     const products = await Product.find()\r\n+//       .populate(\"createBy\", \"name\")\r\n+//       .select(\r\n+//         \"name slug price description offer reviews createBy productImage createdAt\"\r\n+//       );\r\n \r\n-    res.status(200).json({\r\n-      status: \"success\",\r\n-      results: products.length,\r\n-      data: {\r\n-        products,\r\n-      },\r\n-    });\r\n-  } catch (error) {\r\n-    next(new ErrorHandler(\"No Product Data\", 404));\r\n+//     res.status(200).json({\r\n+//       status: \"success\",\r\n+//       results: products.length,\r\n+//       data: {\r\n+//         products,\r\n+//       },\r\n+//     });\r\n+//   } catch (error) {\r\n+//     next(new ErrorHandler(\"No Product Data\", 404));\r\n \r\n-    // res.json(error);\r\n-  }\r\n-};\r\n+//     // res.json(error);\r\n+//   }\r\n+// };\r\n \r\n-exports.getProductDetail = async (req, res, next) => {\r\n-  try {\r\n-    const product = await Product.findById(req.params.id);\r\n+// exports.getProductDetail = async (req, res, next) => {\r\n+//   try {\r\n+//     const product = await Product.findById(req.params.id);\r\n \r\n-    res.status(200).json({\r\n-      success: true,\r\n-      product,\r\n-    });\r\n-  } catch (error) {\r\n-    next(new ErrorHandler(\"Product not found in database\", 404));\r\n-  }\r\n-};\r\n+//     res.status(200).json({\r\n+//       success: true,\r\n+//       product,\r\n+//     });\r\n+//   } catch (error) {\r\n+//     next(new ErrorHandler(\"Product not found in database\", 404));\r\n+//   }\r\n+// };\r\n \r\n exports.createProduct = async (req, res, next) => {\r\n   try {\r\n     const { userId } = req.user;\r\n"
                },
                {
                    "date": 1654228763511,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,43 +6,40 @@\n \r\n // const upload = multer({\r\n //   dest: \"public/Product_Image\",\r\n // });\r\n-// exports.getAllProducts = async (req, res, next) => {\r\n-//   try {\r\n-//     const products = await Product.find()\r\n-//       .populate(\"createBy\", \"name\")\r\n-//       .select(\r\n-//         \"name slug price description offer reviews createBy productImage createdAt\"\r\n-//       );\r\n+exports.getAllProducts = async (req, res, next) => {\r\n+  // try {\r\n+  //   const products = await Product.find()\r\n+  //     .populate(\"createBy\", \"name\")\r\n+  //     .select(\r\n+  //       \"name slug price description offer reviews createBy productImage createdAt\"\r\n+  //     );\r\n+  //   res.status(200).json({\r\n+  //     status: \"success\",\r\n+  //     results: products.length,\r\n+  //     data: {\r\n+  //       products,\r\n+  //     },\r\n+  //   });\r\n+  // } catch (error) {\r\n+  //   next(new ErrorHandler(\"No Product Data\", 404));\r\n+  //   // res.json(error);\r\n+  // }\r\n+};\r\n \r\n-//     res.status(200).json({\r\n-//       status: \"success\",\r\n-//       results: products.length,\r\n-//       data: {\r\n-//         products,\r\n-//       },\r\n-//     });\r\n-//   } catch (error) {\r\n-//     next(new ErrorHandler(\"No Product Data\", 404));\r\n+exports.getProductDetail = async (req, res, next) => {\r\n+  // try {\r\n+  //   const product = await Product.findById(req.params.id);\r\n+  //   res.status(200).json({\r\n+  //     success: true,\r\n+  //     product,\r\n+  //   });\r\n+  // } catch (error) {\r\n+  //   next(new ErrorHandler(\"Product not found in database\", 404));\r\n+  // }\r\n+};\r\n \r\n-//     // res.json(error);\r\n-//   }\r\n-// };\r\n-\r\n-// exports.getProductDetail = async (req, res, next) => {\r\n-//   try {\r\n-//     const product = await Product.findById(req.params.id);\r\n-\r\n-//     res.status(200).json({\r\n-//       success: true,\r\n-//       product,\r\n-//     });\r\n-//   } catch (error) {\r\n-//     next(new ErrorHandler(\"Product not found in database\", 404));\r\n-//   }\r\n-// };\r\n-\r\n exports.createProduct = async (req, res, next) => {\r\n   try {\r\n     const { userId } = req.user;\r\n     const products = await Product.create({\r\n"
                },
                {
                    "date": 1654228952404,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,25 +7,25 @@\n // const upload = multer({\r\n //   dest: \"public/Product_Image\",\r\n // });\r\n exports.getAllProducts = async (req, res, next) => {\r\n-  // try {\r\n-  //   const products = await Product.find()\r\n-  //     .populate(\"createBy\", \"name\")\r\n-  //     .select(\r\n-  //       \"name slug price description offer reviews createBy productImage createdAt\"\r\n-  //     );\r\n-  //   res.status(200).json({\r\n-  //     status: \"success\",\r\n-  //     results: products.length,\r\n-  //     data: {\r\n-  //       products,\r\n-  //     },\r\n-  //   });\r\n-  // } catch (error) {\r\n-  //   next(new ErrorHandler(\"No Product Data\", 404));\r\n-  //   // res.json(error);\r\n-  // }\r\n+  try {\r\n+    const products = await Product.find()\r\n+      .populate(\"createBy\", \"name\")\r\n+      .select(\r\n+        \"name slug price description offer reviews createBy productImage createdAt\"\r\n+      );\r\n+    res.status(200).json({\r\n+      status: \"success\",\r\n+      results: products.length,\r\n+      data: {\r\n+        products,\r\n+      },\r\n+    });\r\n+  } catch (error) {\r\n+    next(new ErrorHandler(\"No Product Data\", 404));\r\n+    // res.json(error);\r\n+  }\r\n };\r\n \r\n exports.getProductDetail = async (req, res, next) => {\r\n   // try {\r\n"
                },
                {
                    "date": 1654228970059,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,9 +21,9 @@\n         products,\r\n       },\r\n     });\r\n   } catch (error) {\r\n-    next(new ErrorHandler(\"No Product Data\", 404));\r\n+    next(error);\r\n     // res.json(error);\r\n   }\r\n };\r\n \r\n"
                },
                {
                    "date": 1654229554844,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -58,22 +58,39 @@\n   }\r\n };\r\n \r\n exports.updateProduct = async (req, res, next) => {\r\n+  // try {\r\n+  //   const { userId } = req.user;\r\n+  //   const { productId } = req.params;\r\n+  //   console.log(req.params);\r\n+  //   const products = await Product.findByIdAndUpdate(\r\n+  //     productId,\r\n+  //     { ...req.body, updateBy: userId, slug: slugify(req.body.name) },\r\n+  //     { new: true, runValidator: true }\r\n+  //   );\r\n+  //   console.log(products);\r\n+  //   res.status(200).json({\r\n+  //     status: \"success\",\r\n+  //     data: {\r\n+  //       products,\r\n+  //     },\r\n+  //   });\r\n+  // } catch (error) {\r\n+  //   next(error);\r\n+  // }\r\n   try {\r\n-    const { userId } = req.user;\r\n-    const { productId } = req.params;\r\n-    console.log(req.params);\r\n-    const products = await Product.findByIdAndUpdate(\r\n-      productId,\r\n-      { ...req.body, updateBy: userId, slug: slugify(req.body.name) },\r\n-      { new: true, runValidator: true }\r\n+    const { catagoryId } = req.params;\r\n+    const catagories = await Catagory.findByIdAndUpdate(\r\n+      catagoryId,\r\n+      { ...req.body },\r\n+      { new: true },\r\n+      { runValidator: true }\r\n     );\r\n-    console.log(products);\r\n     res.status(200).json({\r\n       status: \"success\",\r\n       data: {\r\n-        products,\r\n+        catagories,\r\n       },\r\n     });\r\n   } catch (error) {\r\n     next(error);\r\n"
                },
                {
                    "date": 1654229595453,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -78,19 +78,19 @@\n   // } catch (error) {\r\n   //   next(error);\r\n   // }\r\n   try {\r\n-    const { catagoryId } = req.params;\r\n-    const catagories = await Catagory.findByIdAndUpdate(\r\n-      catagoryId,\r\n+    const { productId } = req.params;\r\n+    const product = await Product.findByIdAndUpdate(\r\n+      productId,\r\n       { ...req.body },\r\n       { new: true },\r\n       { runValidator: true }\r\n     );\r\n     res.status(200).json({\r\n       status: \"success\",\r\n       data: {\r\n-        catagories,\r\n+        product,\r\n       },\r\n     });\r\n   } catch (error) {\r\n     next(error);\r\n"
                },
                {
                    "date": 1654229656647,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,17 +27,17 @@\n   }\r\n };\r\n \r\n exports.getProductDetail = async (req, res, next) => {\r\n-  // try {\r\n-  //   const product = await Product.findById(req.params.id);\r\n-  //   res.status(200).json({\r\n-  //     success: true,\r\n-  //     product,\r\n-  //   });\r\n-  // } catch (error) {\r\n-  //   next(new ErrorHandler(\"Product not found in database\", 404));\r\n-  // }\r\n+  try {\r\n+    const product = await Product.findById(req.params.id);\r\n+    res.status(200).json({\r\n+      success: true,\r\n+      product,\r\n+    });\r\n+  } catch (error) {\r\n+    next(error);\r\n+  }\r\n };\r\n \r\n exports.createProduct = async (req, res, next) => {\r\n   try {\r\n"
                },
                {
                    "date": 1654229824096,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -82,10 +82,9 @@\n     const { productId } = req.params;\r\n     const product = await Product.findByIdAndUpdate(\r\n       productId,\r\n       { ...req.body },\r\n-      { new: true },\r\n-      { runValidator: true }\r\n+      { new: true, runValidator: true }\r\n     );\r\n     res.status(200).json({\r\n       status: \"success\",\r\n       data: {\r\n"
                },
                {
                    "date": 1654229871345,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -84,8 +84,9 @@\n       productId,\r\n       { ...req.body },\r\n       { new: true, runValidator: true }\r\n     );\r\n+    console.log(product);\r\n     res.status(200).json({\r\n       status: \"success\",\r\n       data: {\r\n         product,\r\n"
                },
                {
                    "date": 1654230288998,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,8 +20,11 @@\n       data: {\r\n         products,\r\n       },\r\n     });\r\n+    if (!products) {\r\n+      console.log(\"null\");\r\n+    }\r\n   } catch (error) {\r\n     next(error);\r\n     // res.json(error);\r\n   }\r\n"
                },
                {
                    "date": 1654230327804,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,18 +13,19 @@\n       .populate(\"createBy\", \"name\")\r\n       .select(\r\n         \"name slug price description offer reviews createBy productImage createdAt\"\r\n       );\r\n+\r\n+    if (!products) {\r\n+      console.log(\"null\");\r\n+    }\r\n     res.status(200).json({\r\n       status: \"success\",\r\n       results: products.length,\r\n       data: {\r\n         products,\r\n       },\r\n     });\r\n-    if (!products) {\r\n-      console.log(\"null\");\r\n-    }\r\n   } catch (error) {\r\n     next(error);\r\n     // res.json(error);\r\n   }\r\n"
                },
                {
                    "date": 1654230559722,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,11 +14,11 @@\n       .select(\r\n         \"name slug price description offer reviews createBy productImage createdAt\"\r\n       );\r\n \r\n-    if (!products) {\r\n-      console.log(\"null\");\r\n-    }\r\n+    // if (!products) {\r\n+    //   console.log(\"null\");\r\n+    // }\r\n     res.status(200).json({\r\n       status: \"success\",\r\n       results: products.length,\r\n       data: {\r\n@@ -100,22 +100,22 @@\n     next(error);\r\n   }\r\n };\r\n exports.deleteProduct = async (req, res, next) => {\r\n-  try {\r\n-    const { userId } = req.user;\r\n-    const { productId } = req.params;\r\n-    await Product.findByIdAndDelete(productId);\r\n-    res.status(200).json({\r\n-      status: \"success\",\r\n-      message: \"Product deleted successfully\",\r\n-      deleteBy: userId,\r\n-    });\r\n-  } catch (error) {\r\n-    next(error);\r\n-  }\r\n-  // const product = await Product.findByIdAndDelete(req.params.id);\r\n-  // res.status(200).json({\r\n-  //   success: true,\r\n-  //   message: \"Product deleted successfully\",\r\n-  // });\r\n+  // try {\r\n+  //   const { userId } = req.user;\r\n+  //   const { productId } = req.params;\r\n+  //   await Product.findByIdAndDelete(productId);\r\n+  //   res.status(200).json({\r\n+  //     status: \"success\",\r\n+  //     message: \"Product deleted successfully\",\r\n+  //     deleteBy: userId,\r\n+  //   });\r\n+  // } catch (error) {\r\n+  //   next(error);\r\n+  // }\r\n+  const product = await Product.findByIdAndDelete(req.params.id);\r\n+  res.status(200).json({\r\n+    success: true,\r\n+    message: \"Product deleted successfully\",\r\n+  });\r\n };\r\n"
                },
                {
                    "date": 1654230738843,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -82,9 +82,9 @@\n   // } catch (error) {\r\n   //   next(error);\r\n   // }\r\n   try {\r\n-    const { productId } = req.params;\r\n+    const { productId } = req.params.id;\r\n     const product = await Product.findByIdAndUpdate(\r\n       productId,\r\n       { ...req.body },\r\n       { new: true, runValidator: true }\r\n"
                },
                {
                    "date": 1654230795400,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -82,11 +82,11 @@\n   // } catch (error) {\r\n   //   next(error);\r\n   // }\r\n   try {\r\n-    const { productId } = req.params.id;\r\n+    const { id } = req.params.id;\r\n     const product = await Product.findByIdAndUpdate(\r\n-      productId,\r\n+      id,\r\n       { ...req.body },\r\n       { new: true, runValidator: true }\r\n     );\r\n     console.log(product);\r\n"
                },
                {
                    "date": 1654230804022,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -82,9 +82,9 @@\n   // } catch (error) {\r\n   //   next(error);\r\n   // }\r\n   try {\r\n-    const { id } = req.params.id;\r\n+    const { id } = req.params;\r\n     const product = await Product.findByIdAndUpdate(\r\n       id,\r\n       { ...req.body },\r\n       { new: true, runValidator: true }\r\n"
                },
                {
                    "date": 1654230856451,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -62,39 +62,22 @@\n   }\r\n };\r\n \r\n exports.updateProduct = async (req, res, next) => {\r\n-  // try {\r\n-  //   const { userId } = req.user;\r\n-  //   const { productId } = req.params;\r\n-  //   console.log(req.params);\r\n-  //   const products = await Product.findByIdAndUpdate(\r\n-  //     productId,\r\n-  //     { ...req.body, updateBy: userId, slug: slugify(req.body.name) },\r\n-  //     { new: true, runValidator: true }\r\n-  //   );\r\n-  //   console.log(products);\r\n-  //   res.status(200).json({\r\n-  //     status: \"success\",\r\n-  //     data: {\r\n-  //       products,\r\n-  //     },\r\n-  //   });\r\n-  // } catch (error) {\r\n-  //   next(error);\r\n-  // }\r\n   try {\r\n-    const { id } = req.params;\r\n-    const product = await Product.findByIdAndUpdate(\r\n-      id,\r\n-      { ...req.body },\r\n+    const { userId } = req.user;\r\n+    const { productId } = req.params;\r\n+    console.log(req.params);\r\n+    const products = await Product.findByIdAndUpdate(\r\n+      productId,\r\n+      { ...req.body, updateBy: userId, slug: slugify(req.body.name) },\r\n       { new: true, runValidator: true }\r\n     );\r\n-    console.log(product);\r\n+    console.log(products);\r\n     res.status(200).json({\r\n       status: \"success\",\r\n       data: {\r\n-        product,\r\n+        products,\r\n       },\r\n     });\r\n   } catch (error) {\r\n     next(error);\r\n"
                },
                {
                    "date": 1654230863017,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -83,22 +83,22 @@\n     next(error);\r\n   }\r\n };\r\n exports.deleteProduct = async (req, res, next) => {\r\n-  // try {\r\n-  //   const { userId } = req.user;\r\n-  //   const { productId } = req.params;\r\n-  //   await Product.findByIdAndDelete(productId);\r\n-  //   res.status(200).json({\r\n-  //     status: \"success\",\r\n-  //     message: \"Product deleted successfully\",\r\n-  //     deleteBy: userId,\r\n-  //   });\r\n-  // } catch (error) {\r\n-  //   next(error);\r\n-  // }\r\n-  const product = await Product.findByIdAndDelete(req.params.id);\r\n-  res.status(200).json({\r\n-    success: true,\r\n-    message: \"Product deleted successfully\",\r\n-  });\r\n+  try {\r\n+    const { userId } = req.user;\r\n+    const { productId } = req.params;\r\n+    await Product.findByIdAndDelete(productId);\r\n+    res.status(200).json({\r\n+      status: \"success\",\r\n+      message: \"Product deleted successfully\",\r\n+      deleteBy: userId,\r\n+    });\r\n+  } catch (error) {\r\n+    next(error);\r\n+  }\r\n+  // const product = await Product.findByIdAndDelete(req.params.id);\r\n+  // res.status(200).json({\r\n+  //   success: true,\r\n+  //   message: \"Product deleted successfully\",\r\n+  // });\r\n };\r\n"
                },
                {
                    "date": 1654230872096,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -85,10 +85,10 @@\n };\r\n exports.deleteProduct = async (req, res, next) => {\r\n   try {\r\n     const { userId } = req.user;\r\n-    const { productId } = req.params;\r\n-    await Product.findByIdAndDelete(productId);\r\n+    const { id } = req.params;\r\n+    await Product.findByIdAndDelete(id);\r\n     res.status(200).json({\r\n       status: \"success\",\r\n       message: \"Product deleted successfully\",\r\n       deleteBy: userId,\r\n"
                },
                {
                    "date": 1654230908211,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -67,9 +67,9 @@\n     const { userId } = req.user;\r\n     const { productId } = req.params;\r\n     console.log(req.params);\r\n     const products = await Product.findByIdAndUpdate(\r\n-      productId,\r\n+      id,\r\n       { ...req.body, updateBy: userId, slug: slugify(req.body.name) },\r\n       { new: true, runValidator: true }\r\n     );\r\n     console.log(products);\r\n"
                },
                {
                    "date": 1654230968579,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -64,9 +64,9 @@\n \r\n exports.updateProduct = async (req, res, next) => {\r\n   try {\r\n     const { userId } = req.user;\r\n-    const { productId } = req.params;\r\n+    const { id } = req.params;\r\n     console.log(req.params);\r\n     const products = await Product.findByIdAndUpdate(\r\n       id,\r\n       { ...req.body, updateBy: userId, slug: slugify(req.body.name) },\r\n"
                },
                {
                    "date": 1654759452570,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,98 @@\n+const Product = require(\"../models/Product\");\r\n+const slugify = require(\"slugify\");\r\n+// const multer = requried(\"multer\");\r\n+\r\n+// const upload = multer({\r\n+//   dest: \"public/Product_Image\",\r\n+// });\r\n+exports.getAllProducts = async (req, res, next) => {\r\n+  try {\r\n+    const products = await Product.find({})\r\n+      .populate(\"createBy\", \"name\")\r\n+      .select(\r\n+        \"name slug price description offer reviews createBy productImage createdAt\"\r\n+      );\r\n+    res.status(200).json({\r\n+      status: \"success\",\r\n+      results: products.length,\r\n+      data: {\r\n+        products,\r\n+      },\r\n+    });\r\n+  } catch (error) {\r\n+    next(error);\r\n+    // res.json(error);\r\n+  }\r\n+};\r\n+\r\n+exports.getProductDetail = async (req, res, next) => {\r\n+  try {\r\n+    const product = await Product.findById(req.params.id);\r\n+    res.status(200).json({\r\n+      success: true,\r\n+      product,\r\n+    });\r\n+  } catch (error) {\r\n+    next(error);\r\n+  }\r\n+};\r\n+\r\n+exports.createProduct = async (req, res, next) => {\r\n+  try {\r\n+    const { userId } = req.user;\r\n+    const products = await Product.create({\r\n+      ...req.body,\r\n+      createBy: userId,\r\n+      slug: slugify(req.body.name),\r\n+    });\r\n+    res.status(200).json({\r\n+      status: \"success\",\r\n+      data: {\r\n+        products,\r\n+      },\r\n+    });\r\n+  } catch (error) {\r\n+    next(error);\r\n+  }\r\n+};\r\n+\r\n+exports.updateProduct = async (req, res, next) => {\r\n+  try {\r\n+    const { userId } = req.user;\r\n+    const { id } = req.params;\r\n+    console.log(req.params);\r\n+    const products = await Product.findByIdAndUpdate(\r\n+      id,\r\n+      { ...req.body, updateBy: userId, slug: slugify(req.body.name) },\r\n+      { new: true, runValidator: true }\r\n+    );\r\n+    console.log(products);\r\n+    res.status(200).json({\r\n+      status: \"success\",\r\n+      data: {\r\n+        products,\r\n+      },\r\n+    });\r\n+  } catch (error) {\r\n+    next(error);\r\n+  }\r\n+};\r\n+exports.deleteProduct = async (req, res, next) => {\r\n+  try {\r\n+    const { userId } = req.user;\r\n+    const { id } = req.params;\r\n+    await Product.findByIdAndDelete(id);\r\n+    res.status(200).json({\r\n+      status: \"success\",\r\n+      message: \"Product deleted successfully\",\r\n+      deleteBy: userId,\r\n+    });\r\n+  } catch (error) {\r\n+    next(error);\r\n+  }\r\n+  // const product = await Product.findByIdAndDelete(req.params.id);\r\n+  // res.status(200).json({\r\n+  //   success: true,\r\n+  //   message: \"Product deleted successfully\",\r\n+  // });\r\n+};\r\n"
                },
                {
                    "date": 1654785858247,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,9 +9,9 @@\n   try {\r\n     const products = await Product.find({})\r\n       .populate(\"createBy\", \"name\")\r\n       .select(\r\n-        \"name slug price description offer reviews createBy productImage createdAt\"\r\n+        \"name slug price description offer reviews createBy product_url createdAt\"\r\n       );\r\n     res.status(200).json({\r\n       status: \"success\",\r\n       results: products.length,\r\n@@ -95,108 +95,4 @@\n   //   success: true,\r\n   //   message: \"Product deleted successfully\",\r\n   // });\r\n };\r\n-const Product = require(\"../models/Product\");\r\n-const slugify = require(\"slugify\");\r\n-const ErrorHandler = require(\"../../utils/errorHandler\");\r\n-const catchAsyncError = require(\"../middlewares/catchAsyncError\");\r\n-// const multer = requried(\"multer\");\r\n-\r\n-// const upload = multer({\r\n-//   dest: \"public/Product_Image\",\r\n-// });\r\n-exports.getAllProducts = async (req, res, next) => {\r\n-  try {\r\n-    const products = await Product.find()\r\n-      .populate(\"createBy\", \"name\")\r\n-      .select(\r\n-        \"name slug price description offer reviews createBy productImage createdAt\"\r\n-      );\r\n-\r\n-    // if (!products) {\r\n-    //   console.log(\"null\");\r\n-    // }\r\n-    res.status(200).json({\r\n-      status: \"success\",\r\n-      results: products.length,\r\n-      data: {\r\n-        products,\r\n-      },\r\n-    });\r\n-  } catch (error) {\r\n-    next(error);\r\n-    // res.json(error);\r\n-  }\r\n-};\r\n-\r\n-exports.getProductDetail = async (req, res, next) => {\r\n-  try {\r\n-    const product = await Product.findById(req.params.id);\r\n-    res.status(200).json({\r\n-      success: true,\r\n-      product,\r\n-    });\r\n-  } catch (error) {\r\n-    next(error);\r\n-  }\r\n-};\r\n-\r\n-exports.createProduct = async (req, res, next) => {\r\n-  try {\r\n-    const { userId } = req.user;\r\n-    const products = await Product.create({\r\n-      ...req.body,\r\n-      createBy: userId,\r\n-      slug: slugify(req.body.name),\r\n-    });\r\n-    res.status(200).json({\r\n-      status: \"success\",\r\n-      data: {\r\n-        products,\r\n-      },\r\n-    });\r\n-  } catch (error) {\r\n-    next(error);\r\n-  }\r\n-};\r\n-\r\n-exports.updateProduct = async (req, res, next) => {\r\n-  try {\r\n-    const { userId } = req.user;\r\n-    const { id } = req.params;\r\n-    console.log(req.params);\r\n-    const products = await Product.findByIdAndUpdate(\r\n-      id,\r\n-      { ...req.body, updateBy: userId, slug: slugify(req.body.name) },\r\n-      { new: true, runValidator: true }\r\n-    );\r\n-    console.log(products);\r\n-    res.status(200).json({\r\n-      status: \"success\",\r\n-      data: {\r\n-        products,\r\n-      },\r\n-    });\r\n-  } catch (error) {\r\n-    next(error);\r\n-  }\r\n-};\r\n-exports.deleteProduct = async (req, res, next) => {\r\n-  try {\r\n-    const { userId } = req.user;\r\n-    const { id } = req.params;\r\n-    await Product.findByIdAndDelete(id);\r\n-    res.status(200).json({\r\n-      status: \"success\",\r\n-      message: \"Product deleted successfully\",\r\n-      deleteBy: userId,\r\n-    });\r\n-  } catch (error) {\r\n-    next(error);\r\n-  }\r\n-  // const product = await Product.findByIdAndDelete(req.params.id);\r\n-  // res.status(200).json({\r\n-  //   success: true,\r\n-  //   message: \"Product deleted successfully\",\r\n-  // });\r\n-};\r\n"
                },
                {
                    "date": 1655014037878,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,9 +29,9 @@\n   try {\r\n     const product = await Product.findById(req.params.id);\r\n     res.status(200).json({\r\n       success: true,\r\n-      product,\r\n+      data: { product },\r\n     });\r\n   } catch (error) {\r\n     next(error);\r\n   }\r\n"
                },
                {
                    "date": 1655018343175,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,9 +29,9 @@\n   try {\r\n     const product = await Product.findById(req.params.id);\r\n     res.status(200).json({\r\n       success: true,\r\n-      data: { product },\r\n+      product,\r\n     });\r\n   } catch (error) {\r\n     next(error);\r\n   }\r\n"
                },
                {
                    "date": 1655018358606,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,9 +26,9 @@\n };\r\n \r\n exports.getProductDetail = async (req, res, next) => {\r\n   try {\r\n-    const product = await Product.findById(req.params.id);\r\n+    const product = await Product.findOne(req.params.id);\r\n     res.status(200).json({\r\n       success: true,\r\n       product,\r\n     });\r\n"
                },
                {
                    "date": 1655018473640,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,8 +27,9 @@\n \r\n exports.getProductDetail = async (req, res, next) => {\r\n   try {\r\n     const product = await Product.findOne(req.params.id);\r\n+    console.log(req.params.id);\r\n     res.status(200).json({\r\n       success: true,\r\n       product,\r\n     });\r\n"
                },
                {
                    "date": 1655018508085,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,9 +26,10 @@\n };\r\n \r\n exports.getProductDetail = async (req, res, next) => {\r\n   try {\r\n-    const product = await Product.findOne(req.params.id);\r\n+    const id = req.params.id;\r\n+    const product = await Product.findOne(id);\r\n     console.log(req.params.id);\r\n     res.status(200).json({\r\n       success: true,\r\n       product,\r\n"
                },
                {
                    "date": 1655018529105,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,10 +27,10 @@\n \r\n exports.getProductDetail = async (req, res, next) => {\r\n   try {\r\n     const id = req.params.id;\r\n-    const product = await Product.findOne(id);\r\n-    console.log(req.params.id);\r\n+    const product = await Product.findOne(_id);\r\n+    console.log(id);\r\n     res.status(200).json({\r\n       success: true,\r\n       product,\r\n     });\r\n"
                },
                {
                    "date": 1655018665527,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,9 +27,9 @@\n \r\n exports.getProductDetail = async (req, res, next) => {\r\n   try {\r\n     const id = req.params.id;\r\n-    const product = await Product.findOne(_id);\r\n+    const product = await Product.findOne({ id: req.body._id });\r\n     console.log(id);\r\n     res.status(200).json({\r\n       success: true,\r\n       product,\r\n"
                },
                {
                    "date": 1655019799961,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,9 +26,8 @@\n };\r\n \r\n exports.getProductDetail = async (req, res, next) => {\r\n   try {\r\n-    const id = req.params.id;\r\n     const product = await Product.findOne({ id: req.body._id });\r\n     console.log(id);\r\n     res.status(200).json({\r\n       success: true,\r\n"
                },
                {
                    "date": 1655019809341,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,9 +27,8 @@\n \r\n exports.getProductDetail = async (req, res, next) => {\r\n   try {\r\n     const product = await Product.findOne({ id: req.body._id });\r\n-    console.log(id);\r\n     res.status(200).json({\r\n       success: true,\r\n       product,\r\n     });\r\n"
                },
                {
                    "date": 1655022466138,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,9 +26,9 @@\n };\r\n \r\n exports.getProductDetail = async (req, res, next) => {\r\n   try {\r\n-    const product = await Product.findOne({ id: req.body._id });\r\n+    const product = await Product.findOne({ _id: req.body.id });\r\n     res.status(200).json({\r\n       success: true,\r\n       product,\r\n     });\r\n"
                },
                {
                    "date": 1655022550482,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,9 +26,11 @@\n };\r\n \r\n exports.getProductDetail = async (req, res, next) => {\r\n   try {\r\n-    const product = await Product.findOne({ _id: req.body.id });\r\n+    const id = req.params.id;\r\n+\r\n+    const product = await Product.findOne({ _id: id });\r\n     res.status(200).json({\r\n       success: true,\r\n       product,\r\n     });\r\n"
                },
                {
                    "date": 1655047721547,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,11 +14,10 @@\n       );\r\n     res.status(200).json({\r\n       status: \"success\",\r\n       results: products.length,\r\n-      data: {\r\n-        products,\r\n-      },\r\n+\r\n+      products,\r\n     });\r\n   } catch (error) {\r\n     next(error);\r\n     // res.json(error);\r\n"
                },
                {
                    "date": 1655051180762,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,9 +14,8 @@\n       );\r\n     res.status(200).json({\r\n       status: \"success\",\r\n       results: products.length,\r\n-\r\n       products,\r\n     });\r\n   } catch (error) {\r\n     next(error);\r\n"
                },
                {
                    "date": 1655092981624,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,9 +6,9 @@\n //   dest: \"public/Product_Image\",\r\n // });\r\n exports.getAllProducts = async (req, res, next) => {\r\n   try {\r\n-    const products = await Product.find({})\r\n+    const products = await Product.find()\r\n       .populate(\"createBy\", \"name\")\r\n       .select(\r\n         \"name slug price description offer reviews createBy product_url createdAt\"\r\n       );\r\n"
                },
                {
                    "date": 1655139231064,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,9 +26,9 @@\n exports.getProductDetail = async (req, res, next) => {\r\n   try {\r\n     const id = req.params.id;\r\n \r\n-    const product = await Product.findOne({ _id: id });\r\n+    const product = await Product.findById(req.params.id);\r\n     res.status(200).json({\r\n       success: true,\r\n       product,\r\n     });\r\n"
                },
                {
                    "date": 1655139446653,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,9 +24,9 @@\n };\r\n \r\n exports.getProductDetail = async (req, res, next) => {\r\n   try {\r\n-    const id = req.params.id;\r\n+    // const id = req.params.id;\r\n \r\n     const product = await Product.findById(req.params.id);\r\n     res.status(200).json({\r\n       success: true,\r\n"
                },
                {
                    "date": 1655143241306,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,10 +25,10 @@\n \r\n exports.getProductDetail = async (req, res, next) => {\r\n   try {\r\n     // const id = req.params.id;\r\n-\r\n-    const product = await Product.findById(req.params.id);\r\n+    const { id } = req.params;\r\n+    const product = await Product.findById({ id });\r\n     res.status(200).json({\r\n       success: true,\r\n       product,\r\n     });\r\n"
                },
                {
                    "date": 1655143258409,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,9 +26,9 @@\n exports.getProductDetail = async (req, res, next) => {\r\n   try {\r\n     // const id = req.params.id;\r\n     const { id } = req.params;\r\n-    const product = await Product.findById({ id });\r\n+    const product = await Product.findById(id);\r\n     res.status(200).json({\r\n       success: true,\r\n       product,\r\n     });\r\n"
                },
                {
                    "date": 1655146221084,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,8 +26,9 @@\n exports.getProductDetail = async (req, res, next) => {\r\n   try {\r\n     // const id = req.params.id;\r\n     const { id } = req.params;\r\n+    console.log(id);\r\n     const product = await Product.findById(id);\r\n     res.status(200).json({\r\n       success: true,\r\n       product,\r\n"
                },
                {
                    "date": 1655313212048,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,9 +9,9 @@\n   try {\r\n     const products = await Product.find()\r\n       .populate(\"createBy\", \"name\")\r\n       .select(\r\n-        \"name slug price description offer reviews createBy product_url createdAt\"\r\n+        \"name slug original_price current_price discount_rate description offer reviews createBy product_url createdAt\"\r\n       );\r\n     res.status(200).json({\r\n       status: \"success\",\r\n       results: products.length,\r\n"
                },
                {
                    "date": 1655649689292,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,9 +9,9 @@\n   try {\r\n     const products = await Product.find()\r\n       .populate(\"createBy\", \"name\")\r\n       .select(\r\n-        \"name slug original_price current_price discount_rate description offer reviews createBy product_url createdAt\"\r\n+        \"name slug original_price current_price discount_rate description rating offer reviews createBy product_url createdAt\"\r\n       );\r\n     res.status(200).json({\r\n       status: \"success\",\r\n       results: products.length,\r\n"
                }
            ],
            "date": 1651851802482,
            "name": "Commit-0",
            "content": "const productModel = require(\"../models/productModel\");\r\n\r\nexports.getAllProducts = async (req, res, next) => {\r\n  try {\r\n    const { userId } = req.user;\r\n    const products = await productModel.find().populate(\"author\");\r\n    res.status(200).json({\r\n      status: \"success\",\r\n      data: {\r\n        products,\r\n      },\r\n    });\r\n  } catch (error) {\r\n    res.json(error);\r\n  }\r\n};\r\nexports.createProduct = async (req, res, next) => {\r\n  try {\r\n    const { userId } = req.user;\r\n    const products = await productModel.create({ ...req.body, author: userId });\r\n    res.status(200).json({\r\n      status: \"success\",\r\n      results: products.length,\r\n      data: {\r\n        products,\r\n      },\r\n    });\r\n  } catch (error) {\r\n    res.json(error);\r\n  }\r\n};\r\n\r\nexports.updateProduct = async (req, res, next) => {\r\n  try {\r\n    const { productId } = req.params;\r\n    const products = await productModel.findByIdAndUpdate(\r\n      productId,\r\n      { ...req.body },\r\n      { new: true },\r\n      { runValidator: true }\r\n    );\r\n    res.status(200).json({\r\n      status: \"success\",\r\n      data: {\r\n        products,\r\n      },\r\n    });\r\n  } catch (error) {\r\n    res.json(error);\r\n  }\r\n};\r\nexports.deleteProduct = async (req, res, next) => {\r\n  try {\r\n    const { productId } = req.params;\r\n    await productModel.findByIdAndDelete(productId);\r\n    res.status(200).json({\r\n      status: \"success\",\r\n      message: \"Product deleted successfully\",\r\n    });\r\n  } catch (error) {\r\n    res.json(error);\r\n  }\r\n};\r\n"
        }
    ]
}